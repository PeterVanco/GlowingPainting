   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	ADC_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	ADC_DeInit:
  24              	.LFB29:
  25              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c"
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @version V3.5.0
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @date    11-March-2011
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JL mask */
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
  26              		.loc 1 180 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 82B0     		sub	sp, sp, #8
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  42              		.loc 1 184 0
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 4FF41053 		mov	r3, #9216
  45 000e C4F20103 		movt	r3, 16385
  46 0012 9A42     		cmp	r2, r3
  47 0014 0CD1     		bne	.L2
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  48              		.loc 1 187 0
  49 0016 4FF40070 		mov	r0, #512
  50 001a 4FF00101 		mov	r1, #1
  51 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  52              		.loc 1 189 0
  53 0022 4FF40070 		mov	r0, #512
  54 0026 4FF00001 		mov	r1, #0
  55 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  56 002e 26E0     		b	.L1
  57              	.L2:
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  58              		.loc 1 191 0
  59 0030 7A68     		ldr	r2, [r7, #4]
  60 0032 4FF42053 		mov	r3, #10240
  61 0036 C4F20103 		movt	r3, 16385
  62 003a 9A42     		cmp	r2, r3
  63 003c 0CD1     		bne	.L4
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  64              		.loc 1 194 0
  65 003e 4FF48060 		mov	r0, #1024
  66 0042 4FF00101 		mov	r1, #1
  67 0046 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  68              		.loc 1 196 0
  69 004a 4FF48060 		mov	r0, #1024
  70 004e 4FF00001 		mov	r1, #0
  71 0052 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  72 0056 12E0     		b	.L1
  73              	.L4:
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  74              		.loc 1 200 0
  75 0058 7A68     		ldr	r2, [r7, #4]
  76 005a 4FF47053 		mov	r3, #15360
  77 005e C4F20103 		movt	r3, 16385
  78 0062 9A42     		cmp	r2, r3
  79 0064 0BD1     		bne	.L1
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     {
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
  80              		.loc 1 203 0
  81 0066 4FF40040 		mov	r0, #32768
  82 006a 4FF00101 		mov	r1, #1
  83 006e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  84              		.loc 1 205 0
  85 0072 4FF40040 		mov	r0, #32768
  86 0076 4FF00001 		mov	r1, #0
  87 007a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  88              	.L1:
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     }
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
  89              		.loc 1 208 0
  90 007e 07F10807 		add	r7, r7, #8
  91 0082 BD46     		mov	sp, r7
  92 0084 80BD     		pop	{r7, pc}
  93              		.cfi_endproc
  94              	.LFE29:
  96 0086 00BF     		.align	2
  97              		.global	ADC_Init
  98              		.thumb
  99              		.thumb_func
 101              	ADC_Init:
 102              	.LFB30:
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 103              		.loc 1 219 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 16
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108 0088 80B4     		push	{r7}
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 4
 111              		.cfi_offset 7, -4
 112 008a 85B0     		sub	sp, sp, #20
 113              	.LCFI4:
 114              		.cfi_def_cfa_offset 24
 115 008c 00AF     		add	r7, sp, #0
 116              	.LCFI5:
 117              		.cfi_def_cfa_register 7
 118 008e 7860     		str	r0, [r7, #4]
 119 0090 3960     		str	r1, [r7, #0]
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 120              		.loc 1 220 0
 121 0092 4FF00003 		mov	r3, #0
 122 0096 FB60     		str	r3, [r7, #12]
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 123              		.loc 1 221 0
 124 0098 4FF00003 		mov	r3, #0
 125 009c FB72     		strb	r3, [r7, #11]
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 126              		.loc 1 233 0
 127 009e 7B68     		ldr	r3, [r7, #4]
 128 00a0 5B68     		ldr	r3, [r3, #4]
 129 00a2 FB60     		str	r3, [r7, #12]
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 130              		.loc 1 235 0
 131 00a4 FB68     		ldr	r3, [r7, #12]
 132 00a6 23F47023 		bic	r3, r3, #983040
 133 00aa 23F48073 		bic	r3, r3, #256
 134 00ae FB60     		str	r3, [r7, #12]
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 135              		.loc 1 239 0
 136 00b0 3B68     		ldr	r3, [r7, #0]
 137 00b2 1A68     		ldr	r2, [r3, #0]
 138 00b4 3B68     		ldr	r3, [r7, #0]
 139 00b6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 140 00b8 4FEA0323 		lsl	r3, r3, #8
 141 00bc 1343     		orrs	r3, r3, r2
 142 00be FA68     		ldr	r2, [r7, #12]
 143 00c0 1343     		orrs	r3, r3, r2
 144 00c2 FB60     		str	r3, [r7, #12]
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 145              		.loc 1 241 0
 146 00c4 7B68     		ldr	r3, [r7, #4]
 147 00c6 FA68     		ldr	r2, [r7, #12]
 148 00c8 5A60     		str	r2, [r3, #4]
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 149              		.loc 1 245 0
 150 00ca 7B68     		ldr	r3, [r7, #4]
 151 00cc 9B68     		ldr	r3, [r3, #8]
 152 00ce FB60     		str	r3, [r7, #12]
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 153              		.loc 1 247 0
 154 00d0 FA68     		ldr	r2, [r7, #12]
 155 00d2 4FF2FD73 		movw	r3, #63485
 156 00d6 CFF6F173 		movt	r3, 65521
 157 00da 1340     		ands	r3, r3, r2
 158 00dc FB60     		str	r3, [r7, #12]
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 159              		.loc 1 252 0
 160 00de 3B68     		ldr	r3, [r7, #0]
 161 00e0 DA68     		ldr	r2, [r3, #12]
 162 00e2 3B68     		ldr	r3, [r7, #0]
 163 00e4 9B68     		ldr	r3, [r3, #8]
 164 00e6 1A43     		orrs	r2, r2, r3
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 165              		.loc 1 253 0
 166 00e8 3B68     		ldr	r3, [r7, #0]
 167 00ea 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 168 00ec 4FEA4303 		lsl	r3, r3, #1
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 169              		.loc 1 252 0
 170 00f0 1343     		orrs	r3, r3, r2
 171 00f2 FA68     		ldr	r2, [r7, #12]
 172 00f4 1343     		orrs	r3, r3, r2
 173 00f6 FB60     		str	r3, [r7, #12]
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 174              		.loc 1 255 0
 175 00f8 7B68     		ldr	r3, [r7, #4]
 176 00fa FA68     		ldr	r2, [r7, #12]
 177 00fc 9A60     		str	r2, [r3, #8]
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 178              		.loc 1 259 0
 179 00fe 7B68     		ldr	r3, [r7, #4]
 180 0100 DB6A     		ldr	r3, [r3, #44]
 181 0102 FB60     		str	r3, [r7, #12]
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear L bits */
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 182              		.loc 1 261 0
 183 0104 FB68     		ldr	r3, [r7, #12]
 184 0106 23F47003 		bic	r3, r3, #15728640
 185 010a FB60     		str	r3, [r7, #12]
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 186              		.loc 1 264 0
 187 010c 3B68     		ldr	r3, [r7, #0]
 188 010e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 189 0110 03F1FF33 		add	r3, r3, #-1
 190 0114 DAB2     		uxtb	r2, r3
 191 0116 FB7A     		ldrb	r3, [r7, #11]
 192 0118 1343     		orrs	r3, r3, r2
 193 011a FB72     		strb	r3, [r7, #11]
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 194              		.loc 1 265 0
 195 011c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 196 011e 4FEA0353 		lsl	r3, r3, #20
 197 0122 FA68     		ldr	r2, [r7, #12]
 198 0124 1343     		orrs	r3, r3, r2
 199 0126 FB60     		str	r3, [r7, #12]
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 200              		.loc 1 267 0
 201 0128 7B68     		ldr	r3, [r7, #4]
 202 012a FA68     		ldr	r2, [r7, #12]
 203 012c DA62     		str	r2, [r3, #44]
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 204              		.loc 1 268 0
 205 012e 07F11407 		add	r7, r7, #20
 206 0132 BD46     		mov	sp, r7
 207 0134 80BC     		pop	{r7}
 208 0136 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE30:
 212              		.align	2
 213              		.global	ADC_StructInit
 214              		.thumb
 215              		.thumb_func
 217              	ADC_StructInit:
 218              	.LFB31:
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 219              		.loc 1 276 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 0138 80B4     		push	{r7}
 225              	.LCFI6:
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 013a 83B0     		sub	sp, sp, #12
 229              	.LCFI7:
 230              		.cfi_def_cfa_offset 16
 231 013c 00AF     		add	r7, sp, #0
 232              	.LCFI8:
 233              		.cfi_def_cfa_register 7
 234 013e 7860     		str	r0, [r7, #4]
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 235              		.loc 1 279 0
 236 0140 7B68     		ldr	r3, [r7, #4]
 237 0142 4FF00002 		mov	r2, #0
 238 0146 1A60     		str	r2, [r3, #0]
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 239              		.loc 1 281 0
 240 0148 7B68     		ldr	r3, [r7, #4]
 241 014a 4FF00002 		mov	r2, #0
 242 014e 1A71     		strb	r2, [r3, #4]
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 243              		.loc 1 283 0
 244 0150 7B68     		ldr	r3, [r7, #4]
 245 0152 4FF00002 		mov	r2, #0
 246 0156 5A71     		strb	r2, [r3, #5]
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 247              		.loc 1 285 0
 248 0158 7B68     		ldr	r3, [r7, #4]
 249 015a 4FF00002 		mov	r2, #0
 250 015e 9A60     		str	r2, [r3, #8]
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 251              		.loc 1 287 0
 252 0160 7B68     		ldr	r3, [r7, #4]
 253 0162 4FF00002 		mov	r2, #0
 254 0166 DA60     		str	r2, [r3, #12]
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 255              		.loc 1 289 0
 256 0168 7B68     		ldr	r3, [r7, #4]
 257 016a 4FF00102 		mov	r2, #1
 258 016e 1A74     		strb	r2, [r3, #16]
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 259              		.loc 1 290 0
 260 0170 07F10C07 		add	r7, r7, #12
 261 0174 BD46     		mov	sp, r7
 262 0176 80BC     		pop	{r7}
 263 0178 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE31:
 267 017a 00BF     		.align	2
 268              		.global	ADC_Cmd
 269              		.thumb
 270              		.thumb_func
 272              	ADC_Cmd:
 273              	.LFB32:
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 274              		.loc 1 300 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 017c 80B4     		push	{r7}
 280              	.LCFI9:
 281              		.cfi_def_cfa_offset 4
 282              		.cfi_offset 7, -4
 283 017e 83B0     		sub	sp, sp, #12
 284              	.LCFI10:
 285              		.cfi_def_cfa_offset 16
 286 0180 00AF     		add	r7, sp, #0
 287              	.LCFI11:
 288              		.cfi_def_cfa_register 7
 289 0182 7860     		str	r0, [r7, #4]
 290 0184 0B46     		mov	r3, r1
 291 0186 FB70     		strb	r3, [r7, #3]
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 292              		.loc 1 304 0
 293 0188 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 294 018a 002B     		cmp	r3, #0
 295 018c 06D0     		beq	.L8
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 296              		.loc 1 307 0
 297 018e 7B68     		ldr	r3, [r7, #4]
 298 0190 9B68     		ldr	r3, [r3, #8]
 299 0192 43F00102 		orr	r2, r3, #1
 300 0196 7B68     		ldr	r3, [r7, #4]
 301 0198 9A60     		str	r2, [r3, #8]
 302 019a 05E0     		b	.L7
 303              	.L8:
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 304              		.loc 1 312 0
 305 019c 7B68     		ldr	r3, [r7, #4]
 306 019e 9B68     		ldr	r3, [r3, #8]
 307 01a0 23F00102 		bic	r2, r3, #1
 308 01a4 7B68     		ldr	r3, [r7, #4]
 309 01a6 9A60     		str	r2, [r3, #8]
 310              	.L7:
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 311              		.loc 1 314 0
 312 01a8 07F10C07 		add	r7, r7, #12
 313 01ac BD46     		mov	sp, r7
 314 01ae 80BC     		pop	{r7}
 315 01b0 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE32:
 319 01b2 00BF     		.align	2
 320              		.global	ADC_DMACmd
 321              		.thumb
 322              		.thumb_func
 324              	ADC_DMACmd:
 325              	.LFB33:
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 326              		.loc 1 325 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331 01b4 80B4     		push	{r7}
 332              	.LCFI12:
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 7, -4
 335 01b6 83B0     		sub	sp, sp, #12
 336              	.LCFI13:
 337              		.cfi_def_cfa_offset 16
 338 01b8 00AF     		add	r7, sp, #0
 339              	.LCFI14:
 340              		.cfi_def_cfa_register 7
 341 01ba 7860     		str	r0, [r7, #4]
 342 01bc 0B46     		mov	r3, r1
 343 01be FB70     		strb	r3, [r7, #3]
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 344              		.loc 1 329 0
 345 01c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 346 01c2 002B     		cmp	r3, #0
 347 01c4 06D0     		beq	.L11
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 348              		.loc 1 332 0
 349 01c6 7B68     		ldr	r3, [r7, #4]
 350 01c8 9B68     		ldr	r3, [r3, #8]
 351 01ca 43F48072 		orr	r2, r3, #256
 352 01ce 7B68     		ldr	r3, [r7, #4]
 353 01d0 9A60     		str	r2, [r3, #8]
 354 01d2 05E0     		b	.L10
 355              	.L11:
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 356              		.loc 1 337 0
 357 01d4 7B68     		ldr	r3, [r7, #4]
 358 01d6 9B68     		ldr	r3, [r3, #8]
 359 01d8 23F48072 		bic	r2, r3, #256
 360 01dc 7B68     		ldr	r3, [r7, #4]
 361 01de 9A60     		str	r2, [r3, #8]
 362              	.L10:
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 363              		.loc 1 339 0
 364 01e0 07F10C07 		add	r7, r7, #12
 365 01e4 BD46     		mov	sp, r7
 366 01e6 80BC     		pop	{r7}
 367 01e8 7047     		bx	lr
 368              		.cfi_endproc
 369              	.LFE33:
 371 01ea 00BF     		.align	2
 372              		.global	ADC_ITConfig
 373              		.thumb
 374              		.thumb_func
 376              	ADC_ITConfig:
 377              	.LFB34:
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 378              		.loc 1 354 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 16
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383 01ec 80B4     		push	{r7}
 384              	.LCFI15:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 01ee 85B0     		sub	sp, sp, #20
 388              	.LCFI16:
 389              		.cfi_def_cfa_offset 24
 390 01f0 00AF     		add	r7, sp, #0
 391              	.LCFI17:
 392              		.cfi_def_cfa_register 7
 393 01f2 7860     		str	r0, [r7, #4]
 394 01f4 1346     		mov	r3, r2
 395 01f6 0A46     		mov	r2, r1	@ movhi
 396 01f8 7A80     		strh	r2, [r7, #2]	@ movhi
 397 01fa 7B70     		strb	r3, [r7, #1]
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 398              		.loc 1 355 0
 399 01fc 4FF00003 		mov	r3, #0
 400 0200 FB73     		strb	r3, [r7, #15]
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 401              		.loc 1 361 0
 402 0202 7B88     		ldrh	r3, [r7, #2]	@ movhi
 403 0204 FB73     		strb	r3, [r7, #15]
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 404              		.loc 1 362 0
 405 0206 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 406 0208 002B     		cmp	r3, #0
 407 020a 06D0     		beq	.L14
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 408              		.loc 1 365 0
 409 020c 7B68     		ldr	r3, [r7, #4]
 410 020e 5A68     		ldr	r2, [r3, #4]
 411 0210 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 412 0212 1A43     		orrs	r2, r2, r3
 413 0214 7B68     		ldr	r3, [r7, #4]
 414 0216 5A60     		str	r2, [r3, #4]
 415 0218 07E0     		b	.L13
 416              	.L14:
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 417              		.loc 1 370 0
 418 021a 7B68     		ldr	r3, [r7, #4]
 419 021c 5A68     		ldr	r2, [r3, #4]
 420 021e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 421 0220 6FEA0303 		mvn	r3, r3
 422 0224 1A40     		ands	r2, r2, r3
 423 0226 7B68     		ldr	r3, [r7, #4]
 424 0228 5A60     		str	r2, [r3, #4]
 425              	.L13:
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 426              		.loc 1 372 0
 427 022a 07F11407 		add	r7, r7, #20
 428 022e BD46     		mov	sp, r7
 429 0230 80BC     		pop	{r7}
 430 0232 7047     		bx	lr
 431              		.cfi_endproc
 432              	.LFE34:
 434              		.align	2
 435              		.global	ADC_ResetCalibration
 436              		.thumb
 437              		.thumb_func
 439              	ADC_ResetCalibration:
 440              	.LFB35:
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 441              		.loc 1 380 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0234 80B4     		push	{r7}
 447              	.LCFI18:
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 7, -4
 450 0236 83B0     		sub	sp, sp, #12
 451              	.LCFI19:
 452              		.cfi_def_cfa_offset 16
 453 0238 00AF     		add	r7, sp, #0
 454              	.LCFI20:
 455              		.cfi_def_cfa_register 7
 456 023a 7860     		str	r0, [r7, #4]
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 457              		.loc 1 384 0
 458 023c 7B68     		ldr	r3, [r7, #4]
 459 023e 9B68     		ldr	r3, [r3, #8]
 460 0240 43F00802 		orr	r2, r3, #8
 461 0244 7B68     		ldr	r3, [r7, #4]
 462 0246 9A60     		str	r2, [r3, #8]
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 463              		.loc 1 385 0
 464 0248 07F10C07 		add	r7, r7, #12
 465 024c BD46     		mov	sp, r7
 466 024e 80BC     		pop	{r7}
 467 0250 7047     		bx	lr
 468              		.cfi_endproc
 469              	.LFE35:
 471 0252 00BF     		.align	2
 472              		.global	ADC_GetResetCalibrationStatus
 473              		.thumb
 474              		.thumb_func
 476              	ADC_GetResetCalibrationStatus:
 477              	.LFB36:
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 478              		.loc 1 393 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 16
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483 0254 80B4     		push	{r7}
 484              	.LCFI21:
 485              		.cfi_def_cfa_offset 4
 486              		.cfi_offset 7, -4
 487 0256 85B0     		sub	sp, sp, #20
 488              	.LCFI22:
 489              		.cfi_def_cfa_offset 24
 490 0258 00AF     		add	r7, sp, #0
 491              	.LCFI23:
 492              		.cfi_def_cfa_register 7
 493 025a 7860     		str	r0, [r7, #4]
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 494              		.loc 1 394 0
 495 025c 4FF00003 		mov	r3, #0
 496 0260 FB73     		strb	r3, [r7, #15]
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 497              		.loc 1 398 0
 498 0262 7B68     		ldr	r3, [r7, #4]
 499 0264 9B68     		ldr	r3, [r3, #8]
 500 0266 03F00803 		and	r3, r3, #8
 501 026a 002B     		cmp	r3, #0
 502 026c 03D0     		beq	.L18
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 503              		.loc 1 401 0
 504 026e 4FF00103 		mov	r3, #1
 505 0272 FB73     		strb	r3, [r7, #15]
 506 0274 02E0     		b	.L19
 507              	.L18:
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 508              		.loc 1 406 0
 509 0276 4FF00003 		mov	r3, #0
 510 027a FB73     		strb	r3, [r7, #15]
 511              	.L19:
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 512              		.loc 1 409 0
 513 027c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 514              		.loc 1 410 0
 515 027e 1846     		mov	r0, r3
 516 0280 07F11407 		add	r7, r7, #20
 517 0284 BD46     		mov	sp, r7
 518 0286 80BC     		pop	{r7}
 519 0288 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE36:
 523 028a 00BF     		.align	2
 524              		.global	ADC_StartCalibration
 525              		.thumb
 526              		.thumb_func
 528              	ADC_StartCalibration:
 529              	.LFB37:
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 530              		.loc 1 418 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 028c 80B4     		push	{r7}
 536              	.LCFI24:
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 028e 83B0     		sub	sp, sp, #12
 540              	.LCFI25:
 541              		.cfi_def_cfa_offset 16
 542 0290 00AF     		add	r7, sp, #0
 543              	.LCFI26:
 544              		.cfi_def_cfa_register 7
 545 0292 7860     		str	r0, [r7, #4]
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 546              		.loc 1 422 0
 547 0294 7B68     		ldr	r3, [r7, #4]
 548 0296 9B68     		ldr	r3, [r3, #8]
 549 0298 43F00402 		orr	r2, r3, #4
 550 029c 7B68     		ldr	r3, [r7, #4]
 551 029e 9A60     		str	r2, [r3, #8]
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 552              		.loc 1 423 0
 553 02a0 07F10C07 		add	r7, r7, #12
 554 02a4 BD46     		mov	sp, r7
 555 02a6 80BC     		pop	{r7}
 556 02a8 7047     		bx	lr
 557              		.cfi_endproc
 558              	.LFE37:
 560 02aa 00BF     		.align	2
 561              		.global	ADC_GetCalibrationStatus
 562              		.thumb
 563              		.thumb_func
 565              	ADC_GetCalibrationStatus:
 566              	.LFB38:
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 567              		.loc 1 431 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 16
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572 02ac 80B4     		push	{r7}
 573              	.LCFI27:
 574              		.cfi_def_cfa_offset 4
 575              		.cfi_offset 7, -4
 576 02ae 85B0     		sub	sp, sp, #20
 577              	.LCFI28:
 578              		.cfi_def_cfa_offset 24
 579 02b0 00AF     		add	r7, sp, #0
 580              	.LCFI29:
 581              		.cfi_def_cfa_register 7
 582 02b2 7860     		str	r0, [r7, #4]
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 583              		.loc 1 432 0
 584 02b4 4FF00003 		mov	r3, #0
 585 02b8 FB73     		strb	r3, [r7, #15]
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 586              		.loc 1 436 0
 587 02ba 7B68     		ldr	r3, [r7, #4]
 588 02bc 9B68     		ldr	r3, [r3, #8]
 589 02be 03F00403 		and	r3, r3, #4
 590 02c2 002B     		cmp	r3, #0
 591 02c4 03D0     		beq	.L22
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 592              		.loc 1 439 0
 593 02c6 4FF00103 		mov	r3, #1
 594 02ca FB73     		strb	r3, [r7, #15]
 595 02cc 02E0     		b	.L23
 596              	.L22:
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 597              		.loc 1 444 0
 598 02ce 4FF00003 		mov	r3, #0
 599 02d2 FB73     		strb	r3, [r7, #15]
 600              	.L23:
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 601              		.loc 1 447 0
 602 02d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 603              		.loc 1 448 0
 604 02d6 1846     		mov	r0, r3
 605 02d8 07F11407 		add	r7, r7, #20
 606 02dc BD46     		mov	sp, r7
 607 02de 80BC     		pop	{r7}
 608 02e0 7047     		bx	lr
 609              		.cfi_endproc
 610              	.LFE38:
 612 02e2 00BF     		.align	2
 613              		.global	ADC_SoftwareStartConvCmd
 614              		.thumb
 615              		.thumb_func
 617              	ADC_SoftwareStartConvCmd:
 618              	.LFB39:
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 619              		.loc 1 458 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 8
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624 02e4 80B4     		push	{r7}
 625              	.LCFI30:
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 7, -4
 628 02e6 83B0     		sub	sp, sp, #12
 629              	.LCFI31:
 630              		.cfi_def_cfa_offset 16
 631 02e8 00AF     		add	r7, sp, #0
 632              	.LCFI32:
 633              		.cfi_def_cfa_register 7
 634 02ea 7860     		str	r0, [r7, #4]
 635 02ec 0B46     		mov	r3, r1
 636 02ee FB70     		strb	r3, [r7, #3]
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 637              		.loc 1 462 0
 638 02f0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 639 02f2 002B     		cmp	r3, #0
 640 02f4 06D0     		beq	.L25
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 641              		.loc 1 466 0
 642 02f6 7B68     		ldr	r3, [r7, #4]
 643 02f8 9B68     		ldr	r3, [r3, #8]
 644 02fa 43F4A002 		orr	r2, r3, #5242880
 645 02fe 7B68     		ldr	r3, [r7, #4]
 646 0300 9A60     		str	r2, [r3, #8]
 647 0302 05E0     		b	.L24
 648              	.L25:
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 649              		.loc 1 472 0
 650 0304 7B68     		ldr	r3, [r7, #4]
 651 0306 9B68     		ldr	r3, [r3, #8]
 652 0308 23F4A002 		bic	r2, r3, #5242880
 653 030c 7B68     		ldr	r3, [r7, #4]
 654 030e 9A60     		str	r2, [r3, #8]
 655              	.L24:
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 656              		.loc 1 474 0
 657 0310 07F10C07 		add	r7, r7, #12
 658 0314 BD46     		mov	sp, r7
 659 0316 80BC     		pop	{r7}
 660 0318 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE39:
 664 031a 00BF     		.align	2
 665              		.global	ADC_GetSoftwareStartConvStatus
 666              		.thumb
 667              		.thumb_func
 669              	ADC_GetSoftwareStartConvStatus:
 670              	.LFB40:
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 671              		.loc 1 482 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 16
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 676 031c 80B4     		push	{r7}
 677              	.LCFI33:
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 031e 85B0     		sub	sp, sp, #20
 681              	.LCFI34:
 682              		.cfi_def_cfa_offset 24
 683 0320 00AF     		add	r7, sp, #0
 684              	.LCFI35:
 685              		.cfi_def_cfa_register 7
 686 0322 7860     		str	r0, [r7, #4]
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 687              		.loc 1 483 0
 688 0324 4FF00003 		mov	r3, #0
 689 0328 FB73     		strb	r3, [r7, #15]
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 690              		.loc 1 487 0
 691 032a 7B68     		ldr	r3, [r7, #4]
 692 032c 9B68     		ldr	r3, [r3, #8]
 693 032e 03F48003 		and	r3, r3, #4194304
 694 0332 002B     		cmp	r3, #0
 695 0334 03D0     		beq	.L28
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 696              		.loc 1 490 0
 697 0336 4FF00103 		mov	r3, #1
 698 033a FB73     		strb	r3, [r7, #15]
 699 033c 02E0     		b	.L29
 700              	.L28:
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 701              		.loc 1 495 0
 702 033e 4FF00003 		mov	r3, #0
 703 0342 FB73     		strb	r3, [r7, #15]
 704              	.L29:
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 705              		.loc 1 498 0
 706 0344 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 707              		.loc 1 499 0
 708 0346 1846     		mov	r0, r3
 709 0348 07F11407 		add	r7, r7, #20
 710 034c BD46     		mov	sp, r7
 711 034e 80BC     		pop	{r7}
 712 0350 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE40:
 716 0352 00BF     		.align	2
 717              		.global	ADC_DiscModeChannelCountConfig
 718              		.thumb
 719              		.thumb_func
 721              	ADC_DiscModeChannelCountConfig:
 722              	.LFB41:
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         group channel.
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 723              		.loc 1 510 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 16
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 0354 80B4     		push	{r7}
 729              	.LCFI36:
 730              		.cfi_def_cfa_offset 4
 731              		.cfi_offset 7, -4
 732 0356 85B0     		sub	sp, sp, #20
 733              	.LCFI37:
 734              		.cfi_def_cfa_offset 24
 735 0358 00AF     		add	r7, sp, #0
 736              	.LCFI38:
 737              		.cfi_def_cfa_register 7
 738 035a 7860     		str	r0, [r7, #4]
 739 035c 0B46     		mov	r3, r1
 740 035e FB70     		strb	r3, [r7, #3]
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 741              		.loc 1 511 0
 742 0360 4FF00003 		mov	r3, #0
 743 0364 FB60     		str	r3, [r7, #12]
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 744              		.loc 1 512 0
 745 0366 4FF00003 		mov	r3, #0
 746 036a BB60     		str	r3, [r7, #8]
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 747              		.loc 1 517 0
 748 036c 7B68     		ldr	r3, [r7, #4]
 749 036e 5B68     		ldr	r3, [r3, #4]
 750 0370 FB60     		str	r3, [r7, #12]
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 751              		.loc 1 519 0
 752 0372 FB68     		ldr	r3, [r7, #12]
 753 0374 23F46043 		bic	r3, r3, #57344
 754 0378 FB60     		str	r3, [r7, #12]
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 755              		.loc 1 521 0
 756 037a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 757 037c 03F1FF33 		add	r3, r3, #-1
 758 0380 BB60     		str	r3, [r7, #8]
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 759              		.loc 1 522 0
 760 0382 BB68     		ldr	r3, [r7, #8]
 761 0384 4FEA4333 		lsl	r3, r3, #13
 762 0388 FA68     		ldr	r2, [r7, #12]
 763 038a 1343     		orrs	r3, r3, r2
 764 038c FB60     		str	r3, [r7, #12]
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 765              		.loc 1 524 0
 766 038e 7B68     		ldr	r3, [r7, #4]
 767 0390 FA68     		ldr	r2, [r7, #12]
 768 0392 5A60     		str	r2, [r3, #4]
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 769              		.loc 1 525 0
 770 0394 07F11407 		add	r7, r7, #20
 771 0398 BD46     		mov	sp, r7
 772 039a 80BC     		pop	{r7}
 773 039c 7047     		bx	lr
 774              		.cfi_endproc
 775              	.LFE41:
 777 039e 00BF     		.align	2
 778              		.global	ADC_DiscModeCmd
 779              		.thumb
 780              		.thumb_func
 782              	ADC_DiscModeCmd:
 783              	.LFB42:
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on regular group channel.
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 784              		.loc 1 537 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 8
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789 03a0 80B4     		push	{r7}
 790              	.LCFI39:
 791              		.cfi_def_cfa_offset 4
 792              		.cfi_offset 7, -4
 793 03a2 83B0     		sub	sp, sp, #12
 794              	.LCFI40:
 795              		.cfi_def_cfa_offset 16
 796 03a4 00AF     		add	r7, sp, #0
 797              	.LCFI41:
 798              		.cfi_def_cfa_register 7
 799 03a6 7860     		str	r0, [r7, #4]
 800 03a8 0B46     		mov	r3, r1
 801 03aa FB70     		strb	r3, [r7, #3]
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 802              		.loc 1 541 0
 803 03ac FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 804 03ae 002B     		cmp	r3, #0
 805 03b0 06D0     		beq	.L32
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 806              		.loc 1 544 0
 807 03b2 7B68     		ldr	r3, [r7, #4]
 808 03b4 5B68     		ldr	r3, [r3, #4]
 809 03b6 43F40062 		orr	r2, r3, #2048
 810 03ba 7B68     		ldr	r3, [r7, #4]
 811 03bc 5A60     		str	r2, [r3, #4]
 812 03be 05E0     		b	.L31
 813              	.L32:
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 814              		.loc 1 549 0
 815 03c0 7B68     		ldr	r3, [r7, #4]
 816 03c2 5B68     		ldr	r3, [r3, #4]
 817 03c4 23F40062 		bic	r2, r3, #2048
 818 03c8 7B68     		ldr	r3, [r7, #4]
 819 03ca 5A60     		str	r2, [r3, #4]
 820              	.L31:
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 821              		.loc 1 551 0
 822 03cc 07F10C07 		add	r7, r7, #12
 823 03d0 BD46     		mov	sp, r7
 824 03d2 80BC     		pop	{r7}
 825 03d4 7047     		bx	lr
 826              		.cfi_endproc
 827              	.LFE42:
 829 03d6 00BF     		.align	2
 830              		.global	ADC_RegularChannelConfig
 831              		.thumb
 832              		.thumb_func
 834              	ADC_RegularChannelConfig:
 835              	.LFB43:
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 836              		.loc 1 591 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 03d8 80B4     		push	{r7}
 842              	.LCFI42:
 843              		.cfi_def_cfa_offset 4
 844              		.cfi_offset 7, -4
 845 03da 85B0     		sub	sp, sp, #20
 846              	.LCFI43:
 847              		.cfi_def_cfa_offset 24
 848 03dc 00AF     		add	r7, sp, #0
 849              	.LCFI44:
 850              		.cfi_def_cfa_register 7
 851 03de 7860     		str	r0, [r7, #4]
 852 03e0 F970     		strb	r1, [r7, #3]
 853 03e2 BA70     		strb	r2, [r7, #2]
 854 03e4 7B70     		strb	r3, [r7, #1]
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 855              		.loc 1 592 0
 856 03e6 4FF00003 		mov	r3, #0
 857 03ea FB60     		str	r3, [r7, #12]
 858 03ec 4FF00003 		mov	r3, #0
 859 03f0 BB60     		str	r3, [r7, #8]
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 860              		.loc 1 599 0
 861 03f2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 862 03f4 092B     		cmp	r3, #9
 863 03f6 27D9     		bls	.L35
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 864              		.loc 1 602 0
 865 03f8 7B68     		ldr	r3, [r7, #4]
 866 03fa DB68     		ldr	r3, [r3, #12]
 867 03fc FB60     		str	r3, [r7, #12]
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 868              		.loc 1 604 0
 869 03fe FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 870 0400 1346     		mov	r3, r2
 871 0402 4FEA4303 		lsl	r3, r3, #1
 872 0406 9B18     		adds	r3, r3, r2
 873 0408 A3F11E03 		sub	r3, r3, #30
 874 040c 4FF00702 		mov	r2, #7
 875 0410 02FA03F3 		lsl	r3, r2, r3
 876 0414 BB60     		str	r3, [r7, #8]
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 877              		.loc 1 606 0
 878 0416 BB68     		ldr	r3, [r7, #8]
 879 0418 6FEA0303 		mvn	r3, r3
 880 041c FA68     		ldr	r2, [r7, #12]
 881 041e 1340     		ands	r3, r3, r2
 882 0420 FB60     		str	r3, [r7, #12]
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 883              		.loc 1 608 0
 884 0422 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 885 0424 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 886 0426 1346     		mov	r3, r2
 887 0428 4FEA4303 		lsl	r3, r3, #1
 888 042c 9B18     		adds	r3, r3, r2
 889 042e A3F11E03 		sub	r3, r3, #30
 890 0432 01FA03F3 		lsl	r3, r1, r3
 891 0436 BB60     		str	r3, [r7, #8]
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 892              		.loc 1 610 0
 893 0438 FA68     		ldr	r2, [r7, #12]
 894 043a BB68     		ldr	r3, [r7, #8]
 895 043c 1343     		orrs	r3, r3, r2
 896 043e FB60     		str	r3, [r7, #12]
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 897              		.loc 1 612 0
 898 0440 7B68     		ldr	r3, [r7, #4]
 899 0442 FA68     		ldr	r2, [r7, #12]
 900 0444 DA60     		str	r2, [r3, #12]
 901 0446 22E0     		b	.L36
 902              	.L35:
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 903              		.loc 1 617 0
 904 0448 7B68     		ldr	r3, [r7, #4]
 905 044a 1B69     		ldr	r3, [r3, #16]
 906 044c FB60     		str	r3, [r7, #12]
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 907              		.loc 1 619 0
 908 044e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 909 0450 1346     		mov	r3, r2
 910 0452 4FEA4303 		lsl	r3, r3, #1
 911 0456 9B18     		adds	r3, r3, r2
 912 0458 4FF00702 		mov	r2, #7
 913 045c 02FA03F3 		lsl	r3, r2, r3
 914 0460 BB60     		str	r3, [r7, #8]
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 915              		.loc 1 621 0
 916 0462 BB68     		ldr	r3, [r7, #8]
 917 0464 6FEA0303 		mvn	r3, r3
 918 0468 FA68     		ldr	r2, [r7, #12]
 919 046a 1340     		ands	r3, r3, r2
 920 046c FB60     		str	r3, [r7, #12]
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 921              		.loc 1 623 0
 922 046e 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 923 0470 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 924 0472 1346     		mov	r3, r2
 925 0474 4FEA4303 		lsl	r3, r3, #1
 926 0478 9B18     		adds	r3, r3, r2
 927 047a 01FA03F3 		lsl	r3, r1, r3
 928 047e BB60     		str	r3, [r7, #8]
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 929              		.loc 1 625 0
 930 0480 FA68     		ldr	r2, [r7, #12]
 931 0482 BB68     		ldr	r3, [r7, #8]
 932 0484 1343     		orrs	r3, r3, r2
 933 0486 FB60     		str	r3, [r7, #12]
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 934              		.loc 1 627 0
 935 0488 7B68     		ldr	r3, [r7, #4]
 936 048a FA68     		ldr	r2, [r7, #12]
 937 048c 1A61     		str	r2, [r3, #16]
 938              	.L36:
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (Rank < 7)
 939              		.loc 1 630 0
 940 048e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 941 0490 062B     		cmp	r3, #6
 942 0492 27D8     		bhi	.L37
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 943              		.loc 1 633 0
 944 0494 7B68     		ldr	r3, [r7, #4]
 945 0496 5B6B     		ldr	r3, [r3, #52]
 946 0498 FB60     		str	r3, [r7, #12]
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 947              		.loc 1 635 0
 948 049a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 949 049c 03F1FF32 		add	r2, r3, #-1
 950 04a0 1346     		mov	r3, r2
 951 04a2 4FEA8303 		lsl	r3, r3, #2
 952 04a6 9B18     		adds	r3, r3, r2
 953 04a8 4FF01F02 		mov	r2, #31
 954 04ac 02FA03F3 		lsl	r3, r2, r3
 955 04b0 BB60     		str	r3, [r7, #8]
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 956              		.loc 1 637 0
 957 04b2 BB68     		ldr	r3, [r7, #8]
 958 04b4 6FEA0303 		mvn	r3, r3
 959 04b8 FA68     		ldr	r2, [r7, #12]
 960 04ba 1340     		ands	r3, r3, r2
 961 04bc FB60     		str	r3, [r7, #12]
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 962              		.loc 1 639 0
 963 04be F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 964 04c0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 965 04c2 03F1FF32 		add	r2, r3, #-1
 966 04c6 1346     		mov	r3, r2
 967 04c8 4FEA8303 		lsl	r3, r3, #2
 968 04cc 9B18     		adds	r3, r3, r2
 969 04ce 01FA03F3 		lsl	r3, r1, r3
 970 04d2 BB60     		str	r3, [r7, #8]
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 971              		.loc 1 641 0
 972 04d4 FA68     		ldr	r2, [r7, #12]
 973 04d6 BB68     		ldr	r3, [r7, #8]
 974 04d8 1343     		orrs	r3, r3, r2
 975 04da FB60     		str	r3, [r7, #12]
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 976              		.loc 1 643 0
 977 04dc 7B68     		ldr	r3, [r7, #4]
 978 04de FA68     		ldr	r2, [r7, #12]
 979 04e0 5A63     		str	r2, [r3, #52]
 980 04e2 51E0     		b	.L34
 981              	.L37:
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 982              		.loc 1 646 0
 983 04e4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 984 04e6 0C2B     		cmp	r3, #12
 985 04e8 27D8     		bhi	.L39
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 986              		.loc 1 649 0
 987 04ea 7B68     		ldr	r3, [r7, #4]
 988 04ec 1B6B     		ldr	r3, [r3, #48]
 989 04ee FB60     		str	r3, [r7, #12]
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 990              		.loc 1 651 0
 991 04f0 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 992 04f2 1346     		mov	r3, r2
 993 04f4 4FEA8303 		lsl	r3, r3, #2
 994 04f8 9B18     		adds	r3, r3, r2
 995 04fa A3F12303 		sub	r3, r3, #35
 996 04fe 4FF01F02 		mov	r2, #31
 997 0502 02FA03F3 		lsl	r3, r2, r3
 998 0506 BB60     		str	r3, [r7, #8]
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 999              		.loc 1 653 0
 1000 0508 BB68     		ldr	r3, [r7, #8]
 1001 050a 6FEA0303 		mvn	r3, r3
 1002 050e FA68     		ldr	r2, [r7, #12]
 1003 0510 1340     		ands	r3, r3, r2
 1004 0512 FB60     		str	r3, [r7, #12]
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 1005              		.loc 1 655 0
 1006 0514 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1007 0516 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1008 0518 1346     		mov	r3, r2
 1009 051a 4FEA8303 		lsl	r3, r3, #2
 1010 051e 9B18     		adds	r3, r3, r2
 1011 0520 A3F12303 		sub	r3, r3, #35
 1012 0524 01FA03F3 		lsl	r3, r1, r3
 1013 0528 BB60     		str	r3, [r7, #8]
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1014              		.loc 1 657 0
 1015 052a FA68     		ldr	r2, [r7, #12]
 1016 052c BB68     		ldr	r3, [r7, #8]
 1017 052e 1343     		orrs	r3, r3, r2
 1018 0530 FB60     		str	r3, [r7, #12]
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 1019              		.loc 1 659 0
 1020 0532 7B68     		ldr	r3, [r7, #4]
 1021 0534 FA68     		ldr	r2, [r7, #12]
 1022 0536 1A63     		str	r2, [r3, #48]
 1023 0538 26E0     		b	.L34
 1024              	.L39:
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 1025              		.loc 1 665 0
 1026 053a 7B68     		ldr	r3, [r7, #4]
 1027 053c DB6A     		ldr	r3, [r3, #44]
 1028 053e FB60     		str	r3, [r7, #12]
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 1029              		.loc 1 667 0
 1030 0540 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1031 0542 1346     		mov	r3, r2
 1032 0544 4FEA8303 		lsl	r3, r3, #2
 1033 0548 9B18     		adds	r3, r3, r2
 1034 054a A3F14103 		sub	r3, r3, #65
 1035 054e 4FF01F02 		mov	r2, #31
 1036 0552 02FA03F3 		lsl	r3, r2, r3
 1037 0556 BB60     		str	r3, [r7, #8]
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1038              		.loc 1 669 0
 1039 0558 BB68     		ldr	r3, [r7, #8]
 1040 055a 6FEA0303 		mvn	r3, r3
 1041 055e FA68     		ldr	r2, [r7, #12]
 1042 0560 1340     		ands	r3, r3, r2
 1043 0562 FB60     		str	r3, [r7, #12]
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1044              		.loc 1 671 0
 1045 0564 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1046 0566 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1047 0568 1346     		mov	r3, r2
 1048 056a 4FEA8303 		lsl	r3, r3, #2
 1049 056e 9B18     		adds	r3, r3, r2
 1050 0570 A3F14103 		sub	r3, r3, #65
 1051 0574 01FA03F3 		lsl	r3, r1, r3
 1052 0578 BB60     		str	r3, [r7, #8]
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1053              		.loc 1 673 0
 1054 057a FA68     		ldr	r2, [r7, #12]
 1055 057c BB68     		ldr	r3, [r7, #8]
 1056 057e 1343     		orrs	r3, r3, r2
 1057 0580 FB60     		str	r3, [r7, #12]
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 1058              		.loc 1 675 0
 1059 0582 7B68     		ldr	r3, [r7, #4]
 1060 0584 FA68     		ldr	r2, [r7, #12]
 1061 0586 DA62     		str	r2, [r3, #44]
 1062              	.L34:
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1063              		.loc 1 677 0
 1064 0588 07F11407 		add	r7, r7, #20
 1065 058c BD46     		mov	sp, r7
 1066 058e 80BC     		pop	{r7}
 1067 0590 7047     		bx	lr
 1068              		.cfi_endproc
 1069              	.LFE43:
 1071 0592 00BF     		.align	2
 1072              		.global	ADC_ExternalTrigConvCmd
 1073              		.thumb
 1074              		.thumb_func
 1076              	ADC_ExternalTrigConvCmd:
 1077              	.LFB44:
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1078              		.loc 1 687 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 8
 1081              		@ frame_needed = 1, uses_anonymous_args = 0
 1082              		@ link register save eliminated.
 1083 0594 80B4     		push	{r7}
 1084              	.LCFI45:
 1085              		.cfi_def_cfa_offset 4
 1086              		.cfi_offset 7, -4
 1087 0596 83B0     		sub	sp, sp, #12
 1088              	.LCFI46:
 1089              		.cfi_def_cfa_offset 16
 1090 0598 00AF     		add	r7, sp, #0
 1091              	.LCFI47:
 1092              		.cfi_def_cfa_register 7
 1093 059a 7860     		str	r0, [r7, #4]
 1094 059c 0B46     		mov	r3, r1
 1095 059e FB70     		strb	r3, [r7, #3]
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1096              		.loc 1 691 0
 1097 05a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1098 05a2 002B     		cmp	r3, #0
 1099 05a4 06D0     		beq	.L41
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 1100              		.loc 1 694 0
 1101 05a6 7B68     		ldr	r3, [r7, #4]
 1102 05a8 9B68     		ldr	r3, [r3, #8]
 1103 05aa 43F48012 		orr	r2, r3, #1048576
 1104 05ae 7B68     		ldr	r3, [r7, #4]
 1105 05b0 9A60     		str	r2, [r3, #8]
 1106 05b2 05E0     		b	.L40
 1107              	.L41:
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 1108              		.loc 1 699 0
 1109 05b4 7B68     		ldr	r3, [r7, #4]
 1110 05b6 9B68     		ldr	r3, [r3, #8]
 1111 05b8 23F48012 		bic	r2, r3, #1048576
 1112 05bc 7B68     		ldr	r3, [r7, #4]
 1113 05be 9A60     		str	r2, [r3, #8]
 1114              	.L40:
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1115              		.loc 1 701 0
 1116 05c0 07F10C07 		add	r7, r7, #12
 1117 05c4 BD46     		mov	sp, r7
 1118 05c6 80BC     		pop	{r7}
 1119 05c8 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE44:
 1123 05ca 00BF     		.align	2
 1124              		.global	ADC_GetConversionValue
 1125              		.thumb
 1126              		.thumb_func
 1128              	ADC_GetConversionValue:
 1129              	.LFB45:
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1130              		.loc 1 709 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 8
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134              		@ link register save eliminated.
 1135 05cc 80B4     		push	{r7}
 1136              	.LCFI48:
 1137              		.cfi_def_cfa_offset 4
 1138              		.cfi_offset 7, -4
 1139 05ce 83B0     		sub	sp, sp, #12
 1140              	.LCFI49:
 1141              		.cfi_def_cfa_offset 16
 1142 05d0 00AF     		add	r7, sp, #0
 1143              	.LCFI50:
 1144              		.cfi_def_cfa_register 7
 1145 05d2 7860     		str	r0, [r7, #4]
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 1146              		.loc 1 713 0
 1147 05d4 7B68     		ldr	r3, [r7, #4]
 1148 05d6 DB6C     		ldr	r3, [r3, #76]
 1149 05d8 9BB2     		uxth	r3, r3
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1150              		.loc 1 714 0
 1151 05da 1846     		mov	r0, r3
 1152 05dc 07F10C07 		add	r7, r7, #12
 1153 05e0 BD46     		mov	sp, r7
 1154 05e2 80BC     		pop	{r7}
 1155 05e4 7047     		bx	lr
 1156              		.cfi_endproc
 1157              	.LFE45:
 1159 05e6 00BF     		.align	2
 1160              		.global	ADC_GetDualModeConversionValue
 1161              		.thumb
 1162              		.thumb_func
 1164              	ADC_GetDualModeConversionValue:
 1165              	.LFB46:
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1166              		.loc 1 721 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171 05e8 80B4     		push	{r7}
 1172              	.LCFI51:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 05ea 00AF     		add	r7, sp, #0
 1176              	.LCFI52:
 1177              		.cfi_def_cfa_register 7
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 1178              		.loc 1 723 0
 1179 05ec 42F24C43 		movw	r3, #9292
 1180 05f0 C4F20103 		movt	r3, 16385
 1181 05f4 1B68     		ldr	r3, [r3, #0]
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1182              		.loc 1 724 0
 1183 05f6 1846     		mov	r0, r3
 1184 05f8 BD46     		mov	sp, r7
 1185 05fa 80BC     		pop	{r7}
 1186 05fc 7047     		bx	lr
 1187              		.cfi_endproc
 1188              	.LFE46:
 1190 05fe 00BF     		.align	2
 1191              		.global	ADC_AutoInjectedConvCmd
 1192              		.thumb
 1193              		.thumb_func
 1195              	ADC_AutoInjectedConvCmd:
 1196              	.LFB47:
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1197              		.loc 1 735 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 8
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 1202 0600 80B4     		push	{r7}
 1203              	.LCFI53:
 1204              		.cfi_def_cfa_offset 4
 1205              		.cfi_offset 7, -4
 1206 0602 83B0     		sub	sp, sp, #12
 1207              	.LCFI54:
 1208              		.cfi_def_cfa_offset 16
 1209 0604 00AF     		add	r7, sp, #0
 1210              	.LCFI55:
 1211              		.cfi_def_cfa_register 7
 1212 0606 7860     		str	r0, [r7, #4]
 1213 0608 0B46     		mov	r3, r1
 1214 060a FB70     		strb	r3, [r7, #3]
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1215              		.loc 1 739 0
 1216 060c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1217 060e 002B     		cmp	r3, #0
 1218 0610 06D0     		beq	.L46
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 1219              		.loc 1 742 0
 1220 0612 7B68     		ldr	r3, [r7, #4]
 1221 0614 5B68     		ldr	r3, [r3, #4]
 1222 0616 43F48062 		orr	r2, r3, #1024
 1223 061a 7B68     		ldr	r3, [r7, #4]
 1224 061c 5A60     		str	r2, [r3, #4]
 1225 061e 05E0     		b	.L45
 1226              	.L46:
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 1227              		.loc 1 747 0
 1228 0620 7B68     		ldr	r3, [r7, #4]
 1229 0622 5B68     		ldr	r3, [r3, #4]
 1230 0624 23F48062 		bic	r2, r3, #1024
 1231 0628 7B68     		ldr	r3, [r7, #4]
 1232 062a 5A60     		str	r2, [r3, #4]
 1233              	.L45:
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1234              		.loc 1 749 0
 1235 062c 07F10C07 		add	r7, r7, #12
 1236 0630 BD46     		mov	sp, r7
 1237 0632 80BC     		pop	{r7}
 1238 0634 7047     		bx	lr
 1239              		.cfi_endproc
 1240              	.LFE47:
 1242 0636 00BF     		.align	2
 1243              		.global	ADC_InjectedDiscModeCmd
 1244              		.thumb
 1245              		.thumb_func
 1247              	ADC_InjectedDiscModeCmd:
 1248              	.LFB48:
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on injected group channel.
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1249              		.loc 1 761 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 8
 1252              		@ frame_needed = 1, uses_anonymous_args = 0
 1253              		@ link register save eliminated.
 1254 0638 80B4     		push	{r7}
 1255              	.LCFI56:
 1256              		.cfi_def_cfa_offset 4
 1257              		.cfi_offset 7, -4
 1258 063a 83B0     		sub	sp, sp, #12
 1259              	.LCFI57:
 1260              		.cfi_def_cfa_offset 16
 1261 063c 00AF     		add	r7, sp, #0
 1262              	.LCFI58:
 1263              		.cfi_def_cfa_register 7
 1264 063e 7860     		str	r0, [r7, #4]
 1265 0640 0B46     		mov	r3, r1
 1266 0642 FB70     		strb	r3, [r7, #3]
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1267              		.loc 1 765 0
 1268 0644 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1269 0646 002B     		cmp	r3, #0
 1270 0648 06D0     		beq	.L49
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 1271              		.loc 1 768 0
 1272 064a 7B68     		ldr	r3, [r7, #4]
 1273 064c 5B68     		ldr	r3, [r3, #4]
 1274 064e 43F48052 		orr	r2, r3, #4096
 1275 0652 7B68     		ldr	r3, [r7, #4]
 1276 0654 5A60     		str	r2, [r3, #4]
 1277 0656 05E0     		b	.L48
 1278              	.L49:
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 1279              		.loc 1 773 0
 1280 0658 7B68     		ldr	r3, [r7, #4]
 1281 065a 5B68     		ldr	r3, [r3, #4]
 1282 065c 23F48052 		bic	r2, r3, #4096
 1283 0660 7B68     		ldr	r3, [r7, #4]
 1284 0662 5A60     		str	r2, [r3, #4]
 1285              	.L48:
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1286              		.loc 1 775 0
 1287 0664 07F10C07 		add	r7, r7, #12
 1288 0668 BD46     		mov	sp, r7
 1289 066a 80BC     		pop	{r7}
 1290 066c 7047     		bx	lr
 1291              		.cfi_endproc
 1292              	.LFE48:
 1294 066e 00BF     		.align	2
 1295              		.global	ADC_ExternalTrigInjectedConvConfig
 1296              		.thumb
 1297              		.thumb_func
 1299              	ADC_ExternalTrigInjectedConvConfig:
 1300              	.LFB49:
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1301              		.loc 1 800 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 16
 1304              		@ frame_needed = 1, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306 0670 80B4     		push	{r7}
 1307              	.LCFI59:
 1308              		.cfi_def_cfa_offset 4
 1309              		.cfi_offset 7, -4
 1310 0672 85B0     		sub	sp, sp, #20
 1311              	.LCFI60:
 1312              		.cfi_def_cfa_offset 24
 1313 0674 00AF     		add	r7, sp, #0
 1314              	.LCFI61:
 1315              		.cfi_def_cfa_register 7
 1316 0676 7860     		str	r0, [r7, #4]
 1317 0678 3960     		str	r1, [r7, #0]
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1318              		.loc 1 801 0
 1319 067a 4FF00003 		mov	r3, #0
 1320 067e FB60     		str	r3, [r7, #12]
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 1321              		.loc 1 806 0
 1322 0680 7B68     		ldr	r3, [r7, #4]
 1323 0682 9B68     		ldr	r3, [r3, #8]
 1324 0684 FB60     		str	r3, [r7, #12]
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 1325              		.loc 1 808 0
 1326 0686 FB68     		ldr	r3, [r7, #12]
 1327 0688 23F4E043 		bic	r3, r3, #28672
 1328 068c FB60     		str	r3, [r7, #12]
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1329              		.loc 1 810 0
 1330 068e FA68     		ldr	r2, [r7, #12]
 1331 0690 3B68     		ldr	r3, [r7, #0]
 1332 0692 1343     		orrs	r3, r3, r2
 1333 0694 FB60     		str	r3, [r7, #12]
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 1334              		.loc 1 812 0
 1335 0696 7B68     		ldr	r3, [r7, #4]
 1336 0698 FA68     		ldr	r2, [r7, #12]
 1337 069a 9A60     		str	r2, [r3, #8]
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1338              		.loc 1 813 0
 1339 069c 07F11407 		add	r7, r7, #20
 1340 06a0 BD46     		mov	sp, r7
 1341 06a2 80BC     		pop	{r7}
 1342 06a4 7047     		bx	lr
 1343              		.cfi_endproc
 1344              	.LFE49:
 1346 06a6 00BF     		.align	2
 1347              		.global	ADC_ExternalTrigInjectedConvCmd
 1348              		.thumb
 1349              		.thumb_func
 1351              	ADC_ExternalTrigInjectedConvCmd:
 1352              	.LFB50:
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         external trigger
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         injected conversion.
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1353              		.loc 1 825 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 8
 1356              		@ frame_needed = 1, uses_anonymous_args = 0
 1357              		@ link register save eliminated.
 1358 06a8 80B4     		push	{r7}
 1359              	.LCFI62:
 1360              		.cfi_def_cfa_offset 4
 1361              		.cfi_offset 7, -4
 1362 06aa 83B0     		sub	sp, sp, #12
 1363              	.LCFI63:
 1364              		.cfi_def_cfa_offset 16
 1365 06ac 00AF     		add	r7, sp, #0
 1366              	.LCFI64:
 1367              		.cfi_def_cfa_register 7
 1368 06ae 7860     		str	r0, [r7, #4]
 1369 06b0 0B46     		mov	r3, r1
 1370 06b2 FB70     		strb	r3, [r7, #3]
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1371              		.loc 1 829 0
 1372 06b4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1373 06b6 002B     		cmp	r3, #0
 1374 06b8 06D0     		beq	.L53
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 1375              		.loc 1 832 0
 1376 06ba 7B68     		ldr	r3, [r7, #4]
 1377 06bc 9B68     		ldr	r3, [r3, #8]
 1378 06be 43F40042 		orr	r2, r3, #32768
 1379 06c2 7B68     		ldr	r3, [r7, #4]
 1380 06c4 9A60     		str	r2, [r3, #8]
 1381 06c6 05E0     		b	.L52
 1382              	.L53:
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 1383              		.loc 1 837 0
 1384 06c8 7B68     		ldr	r3, [r7, #4]
 1385 06ca 9B68     		ldr	r3, [r3, #8]
 1386 06cc 23F40042 		bic	r2, r3, #32768
 1387 06d0 7B68     		ldr	r3, [r7, #4]
 1388 06d2 9A60     		str	r2, [r3, #8]
 1389              	.L52:
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1390              		.loc 1 839 0
 1391 06d4 07F10C07 		add	r7, r7, #12
 1392 06d8 BD46     		mov	sp, r7
 1393 06da 80BC     		pop	{r7}
 1394 06dc 7047     		bx	lr
 1395              		.cfi_endproc
 1396              	.LFE50:
 1398 06de 00BF     		.align	2
 1399              		.global	ADC_SoftwareStartInjectedConvCmd
 1400              		.thumb
 1401              		.thumb_func
 1403              	ADC_SoftwareStartInjectedConvCmd:
 1404              	.LFB51:
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channels conversion.
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1405              		.loc 1 850 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 8
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409              		@ link register save eliminated.
 1410 06e0 80B4     		push	{r7}
 1411              	.LCFI65:
 1412              		.cfi_def_cfa_offset 4
 1413              		.cfi_offset 7, -4
 1414 06e2 83B0     		sub	sp, sp, #12
 1415              	.LCFI66:
 1416              		.cfi_def_cfa_offset 16
 1417 06e4 00AF     		add	r7, sp, #0
 1418              	.LCFI67:
 1419              		.cfi_def_cfa_register 7
 1420 06e6 7860     		str	r0, [r7, #4]
 1421 06e8 0B46     		mov	r3, r1
 1422 06ea FB70     		strb	r3, [r7, #3]
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1423              		.loc 1 854 0
 1424 06ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1425 06ee 002B     		cmp	r3, #0
 1426 06f0 06D0     		beq	.L56
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 1427              		.loc 1 858 0
 1428 06f2 7B68     		ldr	r3, [r7, #4]
 1429 06f4 9B68     		ldr	r3, [r3, #8]
 1430 06f6 43F40212 		orr	r2, r3, #2129920
 1431 06fa 7B68     		ldr	r3, [r7, #4]
 1432 06fc 9A60     		str	r2, [r3, #8]
 1433 06fe 05E0     		b	.L55
 1434              	.L56:
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 1435              		.loc 1 864 0
 1436 0700 7B68     		ldr	r3, [r7, #4]
 1437 0702 9B68     		ldr	r3, [r3, #8]
 1438 0704 23F40212 		bic	r2, r3, #2129920
 1439 0708 7B68     		ldr	r3, [r7, #4]
 1440 070a 9A60     		str	r2, [r3, #8]
 1441              	.L55:
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1442              		.loc 1 866 0
 1443 070c 07F10C07 		add	r7, r7, #12
 1444 0710 BD46     		mov	sp, r7
 1445 0712 80BC     		pop	{r7}
 1446 0714 7047     		bx	lr
 1447              		.cfi_endproc
 1448              	.LFE51:
 1450 0716 00BF     		.align	2
 1451              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1452              		.thumb
 1453              		.thumb_func
 1455              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1456              	.LFB52:
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1457              		.loc 1 874 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 16
 1460              		@ frame_needed = 1, uses_anonymous_args = 0
 1461              		@ link register save eliminated.
 1462 0718 80B4     		push	{r7}
 1463              	.LCFI68:
 1464              		.cfi_def_cfa_offset 4
 1465              		.cfi_offset 7, -4
 1466 071a 85B0     		sub	sp, sp, #20
 1467              	.LCFI69:
 1468              		.cfi_def_cfa_offset 24
 1469 071c 00AF     		add	r7, sp, #0
 1470              	.LCFI70:
 1471              		.cfi_def_cfa_register 7
 1472 071e 7860     		str	r0, [r7, #4]
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1473              		.loc 1 875 0
 1474 0720 4FF00003 		mov	r3, #0
 1475 0724 FB73     		strb	r3, [r7, #15]
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 1476              		.loc 1 879 0
 1477 0726 7B68     		ldr	r3, [r7, #4]
 1478 0728 9B68     		ldr	r3, [r3, #8]
 1479 072a 03F40013 		and	r3, r3, #2097152
 1480 072e 002B     		cmp	r3, #0
 1481 0730 03D0     		beq	.L59
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1482              		.loc 1 882 0
 1483 0732 4FF00103 		mov	r3, #1
 1484 0736 FB73     		strb	r3, [r7, #15]
 1485 0738 02E0     		b	.L60
 1486              	.L59:
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1487              		.loc 1 887 0
 1488 073a 4FF00003 		mov	r3, #0
 1489 073e FB73     		strb	r3, [r7, #15]
 1490              	.L60:
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 1491              		.loc 1 890 0
 1492 0740 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1493              		.loc 1 891 0
 1494 0742 1846     		mov	r0, r3
 1495 0744 07F11407 		add	r7, r7, #20
 1496 0748 BD46     		mov	sp, r7
 1497 074a 80BC     		pop	{r7}
 1498 074c 7047     		bx	lr
 1499              		.cfi_endproc
 1500              	.LFE52:
 1502 074e 00BF     		.align	2
 1503              		.global	ADC_InjectedChannelConfig
 1504              		.thumb
 1505              		.thumb_func
 1507              	ADC_InjectedChannelConfig:
 1508              	.LFB53:
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 896:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 897:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 898:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 899:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 900:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 901:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 902:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 903:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 904:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 905:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 906:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 907:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 908:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 909:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 910:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 911:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 912:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 913:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 914:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 915:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 916:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 917:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 918:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 919:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 920:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 921:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 922:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 923:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 924:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 925:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 926:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 927:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 928:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 929:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 930:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 931:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1509              		.loc 1 931 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 24
 1512              		@ frame_needed = 1, uses_anonymous_args = 0
 1513              		@ link register save eliminated.
 1514 0750 80B4     		push	{r7}
 1515              	.LCFI71:
 1516              		.cfi_def_cfa_offset 4
 1517              		.cfi_offset 7, -4
 1518 0752 87B0     		sub	sp, sp, #28
 1519              	.LCFI72:
 1520              		.cfi_def_cfa_offset 32
 1521 0754 00AF     		add	r7, sp, #0
 1522              	.LCFI73:
 1523              		.cfi_def_cfa_register 7
 1524 0756 7860     		str	r0, [r7, #4]
 1525 0758 F970     		strb	r1, [r7, #3]
 1526 075a BA70     		strb	r2, [r7, #2]
 1527 075c 7B70     		strb	r3, [r7, #1]
 932:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 1528              		.loc 1 932 0
 1529 075e 4FF00003 		mov	r3, #0
 1530 0762 7B61     		str	r3, [r7, #20]
 1531 0764 4FF00003 		mov	r3, #0
 1532 0768 3B61     		str	r3, [r7, #16]
 1533 076a 4FF00003 		mov	r3, #0
 1534 076e FB60     		str	r3, [r7, #12]
 933:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 934:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 935:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 936:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 937:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 938:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 939:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1535              		.loc 1 939 0
 1536 0770 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1537 0772 092B     		cmp	r3, #9
 1538 0774 27D9     		bls	.L62
 940:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 941:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 942:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1539              		.loc 1 942 0
 1540 0776 7B68     		ldr	r3, [r7, #4]
 1541 0778 DB68     		ldr	r3, [r3, #12]
 1542 077a 7B61     		str	r3, [r7, #20]
 943:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 944:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 1543              		.loc 1 944 0
 1544 077c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1545 077e 1346     		mov	r3, r2
 1546 0780 4FEA4303 		lsl	r3, r3, #1
 1547 0784 9B18     		adds	r3, r3, r2
 1548 0786 A3F11E03 		sub	r3, r3, #30
 1549 078a 4FF00702 		mov	r2, #7
 1550 078e 02FA03F3 		lsl	r3, r2, r3
 1551 0792 3B61     		str	r3, [r7, #16]
 945:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 946:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1552              		.loc 1 946 0
 1553 0794 3B69     		ldr	r3, [r7, #16]
 1554 0796 6FEA0303 		mvn	r3, r3
 1555 079a 7A69     		ldr	r2, [r7, #20]
 1556 079c 1340     		ands	r3, r3, r2
 1557 079e 7B61     		str	r3, [r7, #20]
 947:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 948:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1558              		.loc 1 948 0
 1559 07a0 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1560 07a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1561 07a4 1346     		mov	r3, r2
 1562 07a6 4FEA4303 		lsl	r3, r3, #1
 1563 07aa 9B18     		adds	r3, r3, r2
 1564 07ac A3F11E03 		sub	r3, r3, #30
 1565 07b0 01FA03F3 		lsl	r3, r1, r3
 1566 07b4 3B61     		str	r3, [r7, #16]
 949:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 950:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1567              		.loc 1 950 0
 1568 07b6 7A69     		ldr	r2, [r7, #20]
 1569 07b8 3B69     		ldr	r3, [r7, #16]
 1570 07ba 1343     		orrs	r3, r3, r2
 1571 07bc 7B61     		str	r3, [r7, #20]
 951:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 952:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1572              		.loc 1 952 0
 1573 07be 7B68     		ldr	r3, [r7, #4]
 1574 07c0 7A69     		ldr	r2, [r7, #20]
 1575 07c2 DA60     		str	r2, [r3, #12]
 1576 07c4 22E0     		b	.L63
 1577              	.L62:
 953:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 954:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 955:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 956:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 957:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1578              		.loc 1 957 0
 1579 07c6 7B68     		ldr	r3, [r7, #4]
 1580 07c8 1B69     		ldr	r3, [r3, #16]
 1581 07ca 7B61     		str	r3, [r7, #20]
 958:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 959:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 1582              		.loc 1 959 0
 1583 07cc FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1584 07ce 1346     		mov	r3, r2
 1585 07d0 4FEA4303 		lsl	r3, r3, #1
 1586 07d4 9B18     		adds	r3, r3, r2
 1587 07d6 4FF00702 		mov	r2, #7
 1588 07da 02FA03F3 		lsl	r3, r2, r3
 1589 07de 3B61     		str	r3, [r7, #16]
 960:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 961:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1590              		.loc 1 961 0
 1591 07e0 3B69     		ldr	r3, [r7, #16]
 1592 07e2 6FEA0303 		mvn	r3, r3
 1593 07e6 7A69     		ldr	r2, [r7, #20]
 1594 07e8 1340     		ands	r3, r3, r2
 1595 07ea 7B61     		str	r3, [r7, #20]
 962:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 963:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1596              		.loc 1 963 0
 1597 07ec 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1598 07ee FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1599 07f0 1346     		mov	r3, r2
 1600 07f2 4FEA4303 		lsl	r3, r3, #1
 1601 07f6 9B18     		adds	r3, r3, r2
 1602 07f8 01FA03F3 		lsl	r3, r1, r3
 1603 07fc 3B61     		str	r3, [r7, #16]
 964:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 965:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1604              		.loc 1 965 0
 1605 07fe 7A69     		ldr	r2, [r7, #20]
 1606 0800 3B69     		ldr	r3, [r7, #16]
 1607 0802 1343     		orrs	r3, r3, r2
 1608 0804 7B61     		str	r3, [r7, #20]
 966:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 967:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1609              		.loc 1 967 0
 1610 0806 7B68     		ldr	r3, [r7, #4]
 1611 0808 7A69     		ldr	r2, [r7, #20]
 1612 080a 1A61     		str	r2, [r3, #16]
 1613              	.L63:
 968:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 969:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Rank configuration */
 970:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 971:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1614              		.loc 1 971 0
 1615 080c 7B68     		ldr	r3, [r7, #4]
 1616 080e 9B6B     		ldr	r3, [r3, #56]
 1617 0810 7B61     		str	r3, [r7, #20]
 972:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 973:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 1618              		.loc 1 973 0
 1619 0812 7B69     		ldr	r3, [r7, #20]
 1620 0814 03F44013 		and	r3, r3, #3145728
 1621 0818 4FEA1353 		lsr	r3, r3, #20
 1622 081c FB60     		str	r3, [r7, #12]
 974:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 975:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1623              		.loc 1 975 0
 1624 081e FB68     		ldr	r3, [r7, #12]
 1625 0820 DBB2     		uxtb	r3, r3
 1626 0822 6FEA0303 		mvn	r3, r3
 1627 0826 DAB2     		uxtb	r2, r3
 1628 0828 BB78     		ldrb	r3, [r7, #2]
 1629 082a D318     		adds	r3, r2, r3
 1630 082c DBB2     		uxtb	r3, r3
 1631 082e 03F10303 		add	r3, r3, #3
 1632 0832 DBB2     		uxtb	r3, r3
 1633 0834 1A46     		mov	r2, r3
 1634 0836 1346     		mov	r3, r2
 1635 0838 4FEA8303 		lsl	r3, r3, #2
 1636 083c 9B18     		adds	r3, r3, r2
 1637 083e 4FF01F02 		mov	r2, #31
 1638 0842 02FA03F3 		lsl	r3, r2, r3
 1639 0846 3B61     		str	r3, [r7, #16]
 976:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 977:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 1640              		.loc 1 977 0
 1641 0848 3B69     		ldr	r3, [r7, #16]
 1642 084a 6FEA0303 		mvn	r3, r3
 1643 084e 7A69     		ldr	r2, [r7, #20]
 1644 0850 1340     		ands	r3, r3, r2
 1645 0852 7B61     		str	r3, [r7, #20]
 978:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 979:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1646              		.loc 1 979 0
 1647 0854 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1648 0856 FB68     		ldr	r3, [r7, #12]
 1649 0858 DBB2     		uxtb	r3, r3
 1650 085a 6FEA0303 		mvn	r3, r3
 1651 085e DAB2     		uxtb	r2, r3
 1652 0860 BB78     		ldrb	r3, [r7, #2]
 1653 0862 D318     		adds	r3, r2, r3
 1654 0864 DBB2     		uxtb	r3, r3
 1655 0866 03F10303 		add	r3, r3, #3
 1656 086a DBB2     		uxtb	r3, r3
 1657 086c 1A46     		mov	r2, r3
 1658 086e 1346     		mov	r3, r2
 1659 0870 4FEA8303 		lsl	r3, r3, #2
 1660 0874 9B18     		adds	r3, r3, r2
 1661 0876 01FA03F3 		lsl	r3, r1, r3
 1662 087a 3B61     		str	r3, [r7, #16]
 980:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 981:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 1663              		.loc 1 981 0
 1664 087c 7A69     		ldr	r2, [r7, #20]
 1665 087e 3B69     		ldr	r3, [r7, #16]
 1666 0880 1343     		orrs	r3, r3, r2
 1667 0882 7B61     		str	r3, [r7, #20]
 982:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 983:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1668              		.loc 1 983 0
 1669 0884 7B68     		ldr	r3, [r7, #4]
 1670 0886 7A69     		ldr	r2, [r7, #20]
 1671 0888 9A63     		str	r2, [r3, #56]
 984:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1672              		.loc 1 984 0
 1673 088a 07F11C07 		add	r7, r7, #28
 1674 088e BD46     		mov	sp, r7
 1675 0890 80BC     		pop	{r7}
 1676 0892 7047     		bx	lr
 1677              		.cfi_endproc
 1678              	.LFE53:
 1680              		.align	2
 1681              		.global	ADC_InjectedSequencerLengthConfig
 1682              		.thumb
 1683              		.thumb_func
 1685              	ADC_InjectedSequencerLengthConfig:
 1686              	.LFB54:
 985:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 986:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 987:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 988:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 989:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 990:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 991:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 992:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 993:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
 994:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1687              		.loc 1 994 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 16
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691              		@ link register save eliminated.
 1692 0894 80B4     		push	{r7}
 1693              	.LCFI74:
 1694              		.cfi_def_cfa_offset 4
 1695              		.cfi_offset 7, -4
 1696 0896 85B0     		sub	sp, sp, #20
 1697              	.LCFI75:
 1698              		.cfi_def_cfa_offset 24
 1699 0898 00AF     		add	r7, sp, #0
 1700              	.LCFI76:
 1701              		.cfi_def_cfa_register 7
 1702 089a 7860     		str	r0, [r7, #4]
 1703 089c 0B46     		mov	r3, r1
 1704 089e FB70     		strb	r3, [r7, #3]
 995:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 1705              		.loc 1 995 0
 1706 08a0 4FF00003 		mov	r3, #0
 1707 08a4 FB60     		str	r3, [r7, #12]
 996:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 1708              		.loc 1 996 0
 1709 08a6 4FF00003 		mov	r3, #0
 1710 08aa BB60     		str	r3, [r7, #8]
 997:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 998:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 999:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1000:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1001:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1002:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1711              		.loc 1 1002 0
 1712 08ac 7B68     		ldr	r3, [r7, #4]
 1713 08ae 9B6B     		ldr	r3, [r3, #56]
 1714 08b0 FB60     		str	r3, [r7, #12]
1003:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1004:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 1715              		.loc 1 1004 0
 1716 08b2 FB68     		ldr	r3, [r7, #12]
 1717 08b4 23F44013 		bic	r3, r3, #3145728
 1718 08b8 FB60     		str	r3, [r7, #12]
1005:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1006:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 1719              		.loc 1 1006 0
 1720 08ba FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1721 08bc 03F1FF33 		add	r3, r3, #-1
 1722 08c0 BB60     		str	r3, [r7, #8]
1007:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1723              		.loc 1 1007 0
 1724 08c2 BB68     		ldr	r3, [r7, #8]
 1725 08c4 4FEA0353 		lsl	r3, r3, #20
 1726 08c8 FA68     		ldr	r2, [r7, #12]
 1727 08ca 1343     		orrs	r3, r3, r2
 1728 08cc FB60     		str	r3, [r7, #12]
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1009:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1729              		.loc 1 1009 0
 1730 08ce 7B68     		ldr	r3, [r7, #4]
 1731 08d0 FA68     		ldr	r2, [r7, #12]
 1732 08d2 9A63     		str	r2, [r3, #56]
1010:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1733              		.loc 1 1010 0
 1734 08d4 07F11407 		add	r7, r7, #20
 1735 08d8 BD46     		mov	sp, r7
 1736 08da 80BC     		pop	{r7}
 1737 08dc 7047     		bx	lr
 1738              		.cfi_endproc
 1739              	.LFE54:
 1741 08de 00BF     		.align	2
 1742              		.global	ADC_SetInjectedOffset
 1743              		.thumb
 1744              		.thumb_func
 1746              	ADC_SetInjectedOffset:
 1747              	.LFB55:
1011:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1012:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1013:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1014:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1015:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1016:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1017:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1018:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1019:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1020:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1021:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1022:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1023:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1024:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1025:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1026:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1748              		.loc 1 1026 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 16
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752              		@ link register save eliminated.
 1753 08e0 80B4     		push	{r7}
 1754              	.LCFI77:
 1755              		.cfi_def_cfa_offset 4
 1756              		.cfi_offset 7, -4
 1757 08e2 85B0     		sub	sp, sp, #20
 1758              	.LCFI78:
 1759              		.cfi_def_cfa_offset 24
 1760 08e4 00AF     		add	r7, sp, #0
 1761              	.LCFI79:
 1762              		.cfi_def_cfa_register 7
 1763 08e6 7860     		str	r0, [r7, #4]
 1764 08e8 1346     		mov	r3, r2
 1765 08ea 0A46     		mov	r2, r1
 1766 08ec FA70     		strb	r2, [r7, #3]
 1767 08ee 3B80     		strh	r3, [r7, #0]	@ movhi
1027:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1768              		.loc 1 1027 0
 1769 08f0 4FF00003 		mov	r3, #0
 1770 08f4 FB60     		str	r3, [r7, #12]
1028:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1029:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1030:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1031:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1032:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1033:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1034:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1771              		.loc 1 1034 0
 1772 08f6 7B68     		ldr	r3, [r7, #4]
 1773 08f8 FB60     		str	r3, [r7, #12]
1035:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 1774              		.loc 1 1035 0
 1775 08fa FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1776 08fc FB68     		ldr	r3, [r7, #12]
 1777 08fe D318     		adds	r3, r2, r3
 1778 0900 FB60     		str	r3, [r7, #12]
1036:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1037:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1038:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1779              		.loc 1 1038 0
 1780 0902 FB68     		ldr	r3, [r7, #12]
 1781 0904 3A88     		ldrh	r2, [r7, #0]
 1782 0906 1A60     		str	r2, [r3, #0]
1039:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1783              		.loc 1 1039 0
 1784 0908 07F11407 		add	r7, r7, #20
 1785 090c BD46     		mov	sp, r7
 1786 090e 80BC     		pop	{r7}
 1787 0910 7047     		bx	lr
 1788              		.cfi_endproc
 1789              	.LFE55:
 1791 0912 00BF     		.align	2
 1792              		.global	ADC_GetInjectedConversionValue
 1793              		.thumb
 1794              		.thumb_func
 1796              	ADC_GetInjectedConversionValue:
 1797              	.LFB56:
1040:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1041:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1042:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1043:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1045:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1046:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1047:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1048:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1049:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1050:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1051:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1052:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1053:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1798              		.loc 1 1053 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 16
 1801              		@ frame_needed = 1, uses_anonymous_args = 0
 1802              		@ link register save eliminated.
 1803 0914 80B4     		push	{r7}
 1804              	.LCFI80:
 1805              		.cfi_def_cfa_offset 4
 1806              		.cfi_offset 7, -4
 1807 0916 85B0     		sub	sp, sp, #20
 1808              	.LCFI81:
 1809              		.cfi_def_cfa_offset 24
 1810 0918 00AF     		add	r7, sp, #0
 1811              	.LCFI82:
 1812              		.cfi_def_cfa_register 7
 1813 091a 7860     		str	r0, [r7, #4]
 1814 091c 0B46     		mov	r3, r1
 1815 091e FB70     		strb	r3, [r7, #3]
1054:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1816              		.loc 1 1054 0
 1817 0920 4FF00003 		mov	r3, #0
 1818 0924 FB60     		str	r3, [r7, #12]
1055:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1056:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1057:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1058:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1059:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1060:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1819              		.loc 1 1060 0
 1820 0926 7B68     		ldr	r3, [r7, #4]
 1821 0928 FB60     		str	r3, [r7, #12]
1061:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 1822              		.loc 1 1061 0
 1823 092a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1824 092c FB68     		ldr	r3, [r7, #12]
 1825 092e D318     		adds	r3, r2, r3
 1826 0930 03F12803 		add	r3, r3, #40
 1827 0934 FB60     		str	r3, [r7, #12]
1062:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1063:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1064:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 1828              		.loc 1 1064 0
 1829 0936 FB68     		ldr	r3, [r7, #12]
 1830 0938 1B68     		ldr	r3, [r3, #0]
 1831 093a 9BB2     		uxth	r3, r3
1065:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1832              		.loc 1 1065 0
 1833 093c 1846     		mov	r0, r3
 1834 093e 07F11407 		add	r7, r7, #20
 1835 0942 BD46     		mov	sp, r7
 1836 0944 80BC     		pop	{r7}
 1837 0946 7047     		bx	lr
 1838              		.cfi_endproc
 1839              	.LFE56:
 1841              		.align	2
 1842              		.global	ADC_AnalogWatchdogCmd
 1843              		.thumb
 1844              		.thumb_func
 1846              	ADC_AnalogWatchdogCmd:
 1847              	.LFB57:
1066:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1067:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1068:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1069:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         or injected channels
1070:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1071:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1072:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1073:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1074:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1075:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1076:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1077:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1078:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1079:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1080:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None	  
1081:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1082:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1083:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1848              		.loc 1 1083 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 16
 1851              		@ frame_needed = 1, uses_anonymous_args = 0
 1852              		@ link register save eliminated.
 1853 0948 80B4     		push	{r7}
 1854              	.LCFI83:
 1855              		.cfi_def_cfa_offset 4
 1856              		.cfi_offset 7, -4
 1857 094a 85B0     		sub	sp, sp, #20
 1858              	.LCFI84:
 1859              		.cfi_def_cfa_offset 24
 1860 094c 00AF     		add	r7, sp, #0
 1861              	.LCFI85:
 1862              		.cfi_def_cfa_register 7
 1863 094e 7860     		str	r0, [r7, #4]
 1864 0950 3960     		str	r1, [r7, #0]
1084:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1865              		.loc 1 1084 0
 1866 0952 4FF00003 		mov	r3, #0
 1867 0956 FB60     		str	r3, [r7, #12]
1085:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1086:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1087:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1088:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1089:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1868              		.loc 1 1089 0
 1869 0958 7B68     		ldr	r3, [r7, #4]
 1870 095a 5B68     		ldr	r3, [r3, #4]
 1871 095c FB60     		str	r3, [r7, #12]
1090:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1091:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 1872              		.loc 1 1091 0
 1873 095e FB68     		ldr	r3, [r7, #12]
 1874 0960 23F44003 		bic	r3, r3, #12582912
 1875 0964 23F40073 		bic	r3, r3, #512
 1876 0968 FB60     		str	r3, [r7, #12]
1092:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1093:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 1877              		.loc 1 1093 0
 1878 096a FA68     		ldr	r2, [r7, #12]
 1879 096c 3B68     		ldr	r3, [r7, #0]
 1880 096e 1343     		orrs	r3, r3, r2
 1881 0970 FB60     		str	r3, [r7, #12]
1094:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1095:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1882              		.loc 1 1095 0
 1883 0972 7B68     		ldr	r3, [r7, #4]
 1884 0974 FA68     		ldr	r2, [r7, #12]
 1885 0976 5A60     		str	r2, [r3, #4]
1096:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1886              		.loc 1 1096 0
 1887 0978 07F11407 		add	r7, r7, #20
 1888 097c BD46     		mov	sp, r7
 1889 097e 80BC     		pop	{r7}
 1890 0980 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE57:
 1894 0982 00BF     		.align	2
 1895              		.global	ADC_AnalogWatchdogThresholdsConfig
 1896              		.thumb
 1897              		.thumb_func
 1899              	ADC_AnalogWatchdogThresholdsConfig:
 1900              	.LFB58:
1097:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1098:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1099:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1901              		.loc 1 1109 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 8
 1904              		@ frame_needed = 1, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
 1906 0984 80B4     		push	{r7}
 1907              	.LCFI86:
 1908              		.cfi_def_cfa_offset 4
 1909              		.cfi_offset 7, -4
 1910 0986 83B0     		sub	sp, sp, #12
 1911              	.LCFI87:
 1912              		.cfi_def_cfa_offset 16
 1913 0988 00AF     		add	r7, sp, #0
 1914              	.LCFI88:
 1915              		.cfi_def_cfa_register 7
 1916 098a 7860     		str	r0, [r7, #4]
 1917 098c 1346     		mov	r3, r2
 1918 098e 0A46     		mov	r2, r1	@ movhi
 1919 0990 7A80     		strh	r2, [r7, #2]	@ movhi
 1920 0992 3B80     		strh	r3, [r7, #0]	@ movhi
1110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 1921              		.loc 1 1115 0
 1922 0994 7A88     		ldrh	r2, [r7, #2]
 1923 0996 7B68     		ldr	r3, [r7, #4]
 1924 0998 5A62     		str	r2, [r3, #36]
1116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 1925              		.loc 1 1117 0
 1926 099a 3A88     		ldrh	r2, [r7, #0]
 1927 099c 7B68     		ldr	r3, [r7, #4]
 1928 099e 9A62     		str	r2, [r3, #40]
1118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1929              		.loc 1 1118 0
 1930 09a0 07F10C07 		add	r7, r7, #12
 1931 09a4 BD46     		mov	sp, r7
 1932 09a6 80BC     		pop	{r7}
 1933 09a8 7047     		bx	lr
 1934              		.cfi_endproc
 1935              	.LFE58:
 1937 09aa 00BF     		.align	2
 1938              		.global	ADC_AnalogWatchdogSingleChannelConfig
 1939              		.thumb
 1940              		.thumb_func
 1942              	ADC_AnalogWatchdogSingleChannelConfig:
 1943              	.LFB59:
1119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1944              		.loc 1 1146 0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 16
 1947              		@ frame_needed = 1, uses_anonymous_args = 0
 1948              		@ link register save eliminated.
 1949 09ac 80B4     		push	{r7}
 1950              	.LCFI89:
 1951              		.cfi_def_cfa_offset 4
 1952              		.cfi_offset 7, -4
 1953 09ae 85B0     		sub	sp, sp, #20
 1954              	.LCFI90:
 1955              		.cfi_def_cfa_offset 24
 1956 09b0 00AF     		add	r7, sp, #0
 1957              	.LCFI91:
 1958              		.cfi_def_cfa_register 7
 1959 09b2 7860     		str	r0, [r7, #4]
 1960 09b4 0B46     		mov	r3, r1
 1961 09b6 FB70     		strb	r3, [r7, #3]
1147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1962              		.loc 1 1147 0
 1963 09b8 4FF00003 		mov	r3, #0
 1964 09bc FB60     		str	r3, [r7, #12]
1148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1965              		.loc 1 1152 0
 1966 09be 7B68     		ldr	r3, [r7, #4]
 1967 09c0 5B68     		ldr	r3, [r3, #4]
 1968 09c2 FB60     		str	r3, [r7, #12]
1153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 1969              		.loc 1 1154 0
 1970 09c4 FB68     		ldr	r3, [r7, #12]
 1971 09c6 23F01F03 		bic	r3, r3, #31
 1972 09ca FB60     		str	r3, [r7, #12]
1155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 1973              		.loc 1 1156 0
 1974 09cc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1975 09ce FA68     		ldr	r2, [r7, #12]
 1976 09d0 1343     		orrs	r3, r3, r2
 1977 09d2 FB60     		str	r3, [r7, #12]
1157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1978              		.loc 1 1158 0
 1979 09d4 7B68     		ldr	r3, [r7, #4]
 1980 09d6 FA68     		ldr	r2, [r7, #12]
 1981 09d8 5A60     		str	r2, [r3, #4]
1159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1982              		.loc 1 1159 0
 1983 09da 07F11407 		add	r7, r7, #20
 1984 09de BD46     		mov	sp, r7
 1985 09e0 80BC     		pop	{r7}
 1986 09e2 7047     		bx	lr
 1987              		.cfi_endproc
 1988              	.LFE59:
 1990              		.align	2
 1991              		.global	ADC_TempSensorVrefintCmd
 1992              		.thumb
 1993              		.thumb_func
 1995              	ADC_TempSensorVrefintCmd:
 1996              	.LFB60:
1160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1997              		.loc 1 1168 0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 8
 2000              		@ frame_needed = 1, uses_anonymous_args = 0
 2001              		@ link register save eliminated.
 2002 09e4 80B4     		push	{r7}
 2003              	.LCFI92:
 2004              		.cfi_def_cfa_offset 4
 2005              		.cfi_offset 7, -4
 2006 09e6 83B0     		sub	sp, sp, #12
 2007              	.LCFI93:
 2008              		.cfi_def_cfa_offset 16
 2009 09e8 00AF     		add	r7, sp, #0
 2010              	.LCFI94:
 2011              		.cfi_def_cfa_register 7
 2012 09ea 0346     		mov	r3, r0
 2013 09ec FB71     		strb	r3, [r7, #7]
1169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2014              		.loc 1 1171 0
 2015 09ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2016 09f0 002B     		cmp	r3, #0
 2017 09f2 0CD0     		beq	.L71
1172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 2018              		.loc 1 1174 0
 2019 09f4 4FF41053 		mov	r3, #9216
 2020 09f8 C4F20103 		movt	r3, 16385
 2021 09fc 4FF41052 		mov	r2, #9216
 2022 0a00 C4F20102 		movt	r2, 16385
 2023 0a04 9268     		ldr	r2, [r2, #8]
 2024 0a06 42F40002 		orr	r2, r2, #8388608
 2025 0a0a 9A60     		str	r2, [r3, #8]
 2026 0a0c 0BE0     		b	.L70
 2027              	.L71:
1175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 2028              		.loc 1 1179 0
 2029 0a0e 4FF41053 		mov	r3, #9216
 2030 0a12 C4F20103 		movt	r3, 16385
 2031 0a16 4FF41052 		mov	r2, #9216
 2032 0a1a C4F20102 		movt	r2, 16385
 2033 0a1e 9268     		ldr	r2, [r2, #8]
 2034 0a20 22F40002 		bic	r2, r2, #8388608
 2035 0a24 9A60     		str	r2, [r3, #8]
 2036              	.L70:
1180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2037              		.loc 1 1181 0
 2038 0a26 07F10C07 		add	r7, r7, #12
 2039 0a2a BD46     		mov	sp, r7
 2040 0a2c 80BC     		pop	{r7}
 2041 0a2e 7047     		bx	lr
 2042              		.cfi_endproc
 2043              	.LFE60:
 2045              		.align	2
 2046              		.global	ADC_GetFlagStatus
 2047              		.thumb
 2048              		.thumb_func
 2050              	ADC_GetFlagStatus:
 2051              	.LFB61:
1182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2052              		.loc 1 1196 0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 16
 2055              		@ frame_needed = 1, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
 2057 0a30 80B4     		push	{r7}
 2058              	.LCFI95:
 2059              		.cfi_def_cfa_offset 4
 2060              		.cfi_offset 7, -4
 2061 0a32 85B0     		sub	sp, sp, #20
 2062              	.LCFI96:
 2063              		.cfi_def_cfa_offset 24
 2064 0a34 00AF     		add	r7, sp, #0
 2065              	.LCFI97:
 2066              		.cfi_def_cfa_register 7
 2067 0a36 7860     		str	r0, [r7, #4]
 2068 0a38 0B46     		mov	r3, r1
 2069 0a3a FB70     		strb	r3, [r7, #3]
1197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 2070              		.loc 1 1197 0
 2071 0a3c 4FF00003 		mov	r3, #0
 2072 0a40 FB73     		strb	r3, [r7, #15]
1198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 2073              		.loc 1 1202 0
 2074 0a42 7B68     		ldr	r3, [r7, #4]
 2075 0a44 1A68     		ldr	r2, [r3, #0]
 2076 0a46 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2077 0a48 1340     		ands	r3, r3, r2
 2078 0a4a 002B     		cmp	r3, #0
 2079 0a4c 03D0     		beq	.L74
1203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2080              		.loc 1 1205 0
 2081 0a4e 4FF00103 		mov	r3, #1
 2082 0a52 FB73     		strb	r3, [r7, #15]
 2083 0a54 02E0     		b	.L75
 2084              	.L74:
1206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2085              		.loc 1 1210 0
 2086 0a56 4FF00003 		mov	r3, #0
 2087 0a5a FB73     		strb	r3, [r7, #15]
 2088              	.L75:
1211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2089              		.loc 1 1213 0
 2090 0a5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2091              		.loc 1 1214 0
 2092 0a5e 1846     		mov	r0, r3
 2093 0a60 07F11407 		add	r7, r7, #20
 2094 0a64 BD46     		mov	sp, r7
 2095 0a66 80BC     		pop	{r7}
 2096 0a68 7047     		bx	lr
 2097              		.cfi_endproc
 2098              	.LFE61:
 2100 0a6a 00BF     		.align	2
 2101              		.global	ADC_ClearFlag
 2102              		.thumb
 2103              		.thumb_func
 2105              	ADC_ClearFlag:
 2106              	.LFB62:
1215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2107              		.loc 1 1229 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 8
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
 2112 0a6c 80B4     		push	{r7}
 2113              	.LCFI98:
 2114              		.cfi_def_cfa_offset 4
 2115              		.cfi_offset 7, -4
 2116 0a6e 83B0     		sub	sp, sp, #12
 2117              	.LCFI99:
 2118              		.cfi_def_cfa_offset 16
 2119 0a70 00AF     		add	r7, sp, #0
 2120              	.LCFI100:
 2121              		.cfi_def_cfa_register 7
 2122 0a72 7860     		str	r0, [r7, #4]
 2123 0a74 0B46     		mov	r3, r1
 2124 0a76 FB70     		strb	r3, [r7, #3]
1230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 2125              		.loc 1 1234 0
 2126 0a78 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2127 0a7a 6FEA0302 		mvn	r2, r3
 2128 0a7e 7B68     		ldr	r3, [r7, #4]
 2129 0a80 1A60     		str	r2, [r3, #0]
1235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2130              		.loc 1 1235 0
 2131 0a82 07F10C07 		add	r7, r7, #12
 2132 0a86 BD46     		mov	sp, r7
 2133 0a88 80BC     		pop	{r7}
 2134 0a8a 7047     		bx	lr
 2135              		.cfi_endproc
 2136              	.LFE62:
 2138              		.align	2
 2139              		.global	ADC_GetITStatus
 2140              		.thumb
 2141              		.thumb_func
 2143              	ADC_GetITStatus:
 2144              	.LFB63:
1236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2145              		.loc 1 1248 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 24
 2148              		@ frame_needed = 1, uses_anonymous_args = 0
 2149              		@ link register save eliminated.
 2150 0a8c 80B4     		push	{r7}
 2151              	.LCFI101:
 2152              		.cfi_def_cfa_offset 4
 2153              		.cfi_offset 7, -4
 2154 0a8e 87B0     		sub	sp, sp, #28
 2155              	.LCFI102:
 2156              		.cfi_def_cfa_offset 32
 2157 0a90 00AF     		add	r7, sp, #0
 2158              	.LCFI103:
 2159              		.cfi_def_cfa_register 7
 2160 0a92 7860     		str	r0, [r7, #4]
 2161 0a94 0B46     		mov	r3, r1
 2162 0a96 7B80     		strh	r3, [r7, #2]	@ movhi
1249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 2163              		.loc 1 1249 0
 2164 0a98 4FF00003 		mov	r3, #0
 2165 0a9c FB75     		strb	r3, [r7, #23]
1250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 2166              		.loc 1 1250 0
 2167 0a9e 4FF00003 		mov	r3, #0
 2168 0aa2 3B61     		str	r3, [r7, #16]
 2169 0aa4 4FF00003 		mov	r3, #0
 2170 0aa8 FB60     		str	r3, [r7, #12]
1251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 2171              		.loc 1 1255 0
 2172 0aaa 7B88     		ldrh	r3, [r7, #2]
 2173 0aac 4FEA1323 		lsr	r3, r3, #8
 2174 0ab0 9BB2     		uxth	r3, r3
 2175 0ab2 3B61     		str	r3, [r7, #16]
1256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 2176              		.loc 1 1257 0
 2177 0ab4 7B68     		ldr	r3, [r7, #4]
 2178 0ab6 5A68     		ldr	r2, [r3, #4]
 2179 0ab8 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2180 0aba DBB2     		uxtb	r3, r3
 2181 0abc 1340     		ands	r3, r3, r2
 2182 0abe FB60     		str	r3, [r7, #12]
1258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 2183              		.loc 1 1259 0
 2184 0ac0 7B68     		ldr	r3, [r7, #4]
 2185 0ac2 1A68     		ldr	r2, [r3, #0]
 2186 0ac4 3B69     		ldr	r3, [r7, #16]
 2187 0ac6 1340     		ands	r3, r3, r2
 2188 0ac8 002B     		cmp	r3, #0
 2189 0aca 06D0     		beq	.L78
 2190              		.loc 1 1259 0 is_stmt 0 discriminator 1
 2191 0acc FB68     		ldr	r3, [r7, #12]
 2192 0ace 002B     		cmp	r3, #0
 2193 0ad0 03D0     		beq	.L78
1260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2194              		.loc 1 1262 0 is_stmt 1
 2195 0ad2 4FF00103 		mov	r3, #1
 2196 0ad6 FB75     		strb	r3, [r7, #23]
 2197 0ad8 02E0     		b	.L79
 2198              	.L78:
1263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2199              		.loc 1 1267 0
 2200 0ada 4FF00003 		mov	r3, #0
 2201 0ade FB75     		strb	r3, [r7, #23]
 2202              	.L79:
1268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2203              		.loc 1 1270 0
 2204 0ae0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2205              		.loc 1 1271 0
 2206 0ae2 1846     		mov	r0, r3
 2207 0ae4 07F11C07 		add	r7, r7, #28
 2208 0ae8 BD46     		mov	sp, r7
 2209 0aea 80BC     		pop	{r7}
 2210 0aec 7047     		bx	lr
 2211              		.cfi_endproc
 2212              	.LFE63:
 2214 0aee 00BF     		.align	2
 2215              		.global	ADC_ClearITPendingBit
 2216              		.thumb
 2217              		.thumb_func
 2219              	ADC_ClearITPendingBit:
 2220              	.LFB64:
1272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2221              		.loc 1 1284 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 16
 2224              		@ frame_needed = 1, uses_anonymous_args = 0
 2225              		@ link register save eliminated.
 2226 0af0 80B4     		push	{r7}
 2227              	.LCFI104:
 2228              		.cfi_def_cfa_offset 4
 2229              		.cfi_offset 7, -4
 2230 0af2 85B0     		sub	sp, sp, #20
 2231              	.LCFI105:
 2232              		.cfi_def_cfa_offset 24
 2233 0af4 00AF     		add	r7, sp, #0
 2234              	.LCFI106:
 2235              		.cfi_def_cfa_register 7
 2236 0af6 7860     		str	r0, [r7, #4]
 2237 0af8 0B46     		mov	r3, r1
 2238 0afa 7B80     		strh	r3, [r7, #2]	@ movhi
1285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 2239              		.loc 1 1285 0
 2240 0afc 4FF00003 		mov	r3, #0
 2241 0b00 FB73     		strb	r3, [r7, #15]
1286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 2242              		.loc 1 1290 0
 2243 0b02 7B88     		ldrh	r3, [r7, #2]
 2244 0b04 4FEA1323 		lsr	r3, r3, #8
 2245 0b08 9BB2     		uxth	r3, r3
 2246 0b0a FB73     		strb	r3, [r7, #15]
1291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 2247              		.loc 1 1292 0
 2248 0b0c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2249 0b0e 6FEA0302 		mvn	r2, r3
 2250 0b12 7B68     		ldr	r3, [r7, #4]
 2251 0b14 1A60     		str	r2, [r3, #0]
1293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2252              		.loc 1 1293 0
 2253 0b16 07F11407 		add	r7, r7, #20
 2254 0b1a BD46     		mov	sp, r7
 2255 0b1c 80BC     		pop	{r7}
 2256 0b1e 7047     		bx	lr
 2257              		.cfi_endproc
 2258              	.LFE64:
 2260              	.Letext0:
 2261              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 2262              		.file 3 "D:\\CORTEX\\F1_GlowingPainting\\Libraries\\CMSIS\\CM3\\DeviceSupport\\ST\\STM32F10x/stm32
 2263              		.file 4 "D:\\CORTEX\\F1_GlowingPainting\\Libraries\\STM32F10x_StdPeriph_Driver\\inc/stm32f10x_adc.
 2264              		.file 5 "D:\\CORTEX\\F1_GlowingPainting\\Libraries\\CMSIS\\CM3\\CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_adc.c
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:18     .text:00000000 $t
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:23     .text:00000000 ADC_DeInit
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:101    .text:00000088 ADC_Init
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:217    .text:00000138 ADC_StructInit
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:272    .text:0000017c ADC_Cmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:324    .text:000001b4 ADC_DMACmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:376    .text:000001ec ADC_ITConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:439    .text:00000234 ADC_ResetCalibration
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:476    .text:00000254 ADC_GetResetCalibrationStatus
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:528    .text:0000028c ADC_StartCalibration
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:565    .text:000002ac ADC_GetCalibrationStatus
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:617    .text:000002e4 ADC_SoftwareStartConvCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:669    .text:0000031c ADC_GetSoftwareStartConvStatus
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:721    .text:00000354 ADC_DiscModeChannelCountConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:782    .text:000003a0 ADC_DiscModeCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:834    .text:000003d8 ADC_RegularChannelConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1076   .text:00000594 ADC_ExternalTrigConvCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1128   .text:000005cc ADC_GetConversionValue
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1164   .text:000005e8 ADC_GetDualModeConversionValue
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1195   .text:00000600 ADC_AutoInjectedConvCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1247   .text:00000638 ADC_InjectedDiscModeCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1299   .text:00000670 ADC_ExternalTrigInjectedConvConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1351   .text:000006a8 ADC_ExternalTrigInjectedConvCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1403   .text:000006e0 ADC_SoftwareStartInjectedConvCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1455   .text:00000718 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1507   .text:00000750 ADC_InjectedChannelConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1685   .text:00000894 ADC_InjectedSequencerLengthConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1746   .text:000008e0 ADC_SetInjectedOffset
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1796   .text:00000914 ADC_GetInjectedConversionValue
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1846   .text:00000948 ADC_AnalogWatchdogCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1899   .text:00000984 ADC_AnalogWatchdogThresholdsConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1942   .text:000009ac ADC_AnalogWatchdogSingleChannelConfig
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:1995   .text:000009e4 ADC_TempSensorVrefintCmd
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:2050   .text:00000a30 ADC_GetFlagStatus
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:2105   .text:00000a6c ADC_ClearFlag
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:2143   .text:00000a8c ADC_GetITStatus
C:\Users\Peter\AppData\Local\Temp\ccKJVFeg.s:2219   .text:00000af0 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
