   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.data.APBAHBPrescTable,"aw",%progbits
  19              		.align	2
  22              	APBAHBPrescTable:
  23 0000 00       		.byte	0
  24 0001 00       		.byte	0
  25 0002 00       		.byte	0
  26 0003 00       		.byte	0
  27 0004 01       		.byte	1
  28 0005 02       		.byte	2
  29 0006 03       		.byte	3
  30 0007 04       		.byte	4
  31 0008 01       		.byte	1
  32 0009 02       		.byte	2
  33 000a 03       		.byte	3
  34 000b 04       		.byte	4
  35 000c 06       		.byte	6
  36 000d 07       		.byte	7
  37 000e 08       		.byte	8
  38 000f 09       		.byte	9
  39              		.section	.data.ADCPrescTable,"aw",%progbits
  40              		.align	2
  43              	ADCPrescTable:
  44 0000 02       		.byte	2
  45 0001 04       		.byte	4
  46 0002 06       		.byte	6
  47 0003 08       		.byte	8
  48              		.text
  49              		.align	2
  50              		.global	RCC_DeInit
  51              		.thumb
  52              		.thumb_func
  54              	RCC_DeInit:
  55              	.LFB29:
  56              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  57              		.loc 1 218 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0000 80B4     		push	{r7}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI1:
  68              		.cfi_def_cfa_register 7
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  69              		.loc 1 220 0
  70 0004 4FF48053 		mov	r3, #4096
  71 0008 C4F20203 		movt	r3, 16386
  72 000c 4FF48052 		mov	r2, #4096
  73 0010 C4F20202 		movt	r2, 16386
  74 0014 1268     		ldr	r2, [r2, #0]
  75 0016 42F00102 		orr	r2, r2, #1
  76 001a 1A60     		str	r2, [r3, #0]
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  77              		.loc 1 224 0
  78 001c 4FF48052 		mov	r2, #4096
  79 0020 C4F20202 		movt	r2, 16386
  80 0024 4FF48053 		mov	r3, #4096
  81 0028 C4F20203 		movt	r3, 16386
  82 002c 5968     		ldr	r1, [r3, #4]
  83 002e 4FF00003 		mov	r3, #0
  84 0032 CFF6FF03 		movt	r3, 63743
  85 0036 0B40     		ands	r3, r3, r1
  86 0038 5360     		str	r3, [r2, #4]
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  87              		.loc 1 230 0
  88 003a 4FF48053 		mov	r3, #4096
  89 003e C4F20203 		movt	r3, 16386
  90 0042 4FF48052 		mov	r2, #4096
  91 0046 C4F20202 		movt	r2, 16386
  92 004a 1268     		ldr	r2, [r2, #0]
  93 004c 22F08472 		bic	r2, r2, #17301504
  94 0050 22F48032 		bic	r2, r2, #65536
  95 0054 1A60     		str	r2, [r3, #0]
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  96              		.loc 1 233 0
  97 0056 4FF48053 		mov	r3, #4096
  98 005a C4F20203 		movt	r3, 16386
  99 005e 4FF48052 		mov	r2, #4096
 100 0062 C4F20202 		movt	r2, 16386
 101 0066 1268     		ldr	r2, [r2, #0]
 102 0068 22F48022 		bic	r2, r2, #262144
 103 006c 1A60     		str	r2, [r3, #0]
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 104              		.loc 1 236 0
 105 006e 4FF48053 		mov	r3, #4096
 106 0072 C4F20203 		movt	r3, 16386
 107 0076 4FF48052 		mov	r2, #4096
 108 007a C4F20202 		movt	r2, 16386
 109 007e 5268     		ldr	r2, [r2, #4]
 110 0080 22F4FE02 		bic	r2, r2, #8323072
 111 0084 5A60     		str	r2, [r3, #4]
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 112              		.loc 1 249 0
 113 0086 4FF48053 		mov	r3, #4096
 114 008a C4F20203 		movt	r3, 16386
 115 008e 4FF41F02 		mov	r2, #10420224
 116 0092 9A60     		str	r2, [r3, #8]
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 117              		.loc 1 252 0
 118 0094 4FF48053 		mov	r3, #4096
 119 0098 C4F20203 		movt	r3, 16386
 120 009c 4FF00002 		mov	r2, #0
 121 00a0 DA62     		str	r2, [r3, #44]
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 122              		.loc 1 258 0
 123 00a2 BD46     		mov	sp, r7
 124 00a4 80BC     		pop	{r7}
 125 00a6 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE29:
 129              		.align	2
 130              		.global	RCC_HSEConfig
 131              		.thumb
 132              		.thumb_func
 134              	RCC_HSEConfig:
 135              	.LFB30:
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 136              		.loc 1 271 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 00a8 80B4     		push	{r7}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 7, -4
 145 00aa 83B0     		sub	sp, sp, #12
 146              	.LCFI3:
 147              		.cfi_def_cfa_offset 16
 148 00ac 00AF     		add	r7, sp, #0
 149              	.LCFI4:
 150              		.cfi_def_cfa_register 7
 151 00ae 7860     		str	r0, [r7, #4]
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 152              		.loc 1 276 0
 153 00b0 4FF48053 		mov	r3, #4096
 154 00b4 C4F20203 		movt	r3, 16386
 155 00b8 4FF48052 		mov	r2, #4096
 156 00bc C4F20202 		movt	r2, 16386
 157 00c0 1268     		ldr	r2, [r2, #0]
 158 00c2 22F48032 		bic	r2, r2, #65536
 159 00c6 1A60     		str	r2, [r3, #0]
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 160              		.loc 1 278 0
 161 00c8 4FF48053 		mov	r3, #4096
 162 00cc C4F20203 		movt	r3, 16386
 163 00d0 4FF48052 		mov	r2, #4096
 164 00d4 C4F20202 		movt	r2, 16386
 165 00d8 1268     		ldr	r2, [r2, #0]
 166 00da 22F48022 		bic	r2, r2, #262144
 167 00de 1A60     		str	r2, [r3, #0]
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
 168              		.loc 1 280 0
 169 00e0 7B68     		ldr	r3, [r7, #4]
 170 00e2 B3F5803F 		cmp	r3, #65536
 171 00e6 03D0     		beq	.L4
 172 00e8 B3F5802F 		cmp	r3, #262144
 173 00ec 0DD0     		beq	.L5
 174 00ee 19E0     		b	.L7
 175              	.L4:
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 176              		.loc 1 284 0
 177 00f0 4FF48053 		mov	r3, #4096
 178 00f4 C4F20203 		movt	r3, 16386
 179 00f8 4FF48052 		mov	r2, #4096
 180 00fc C4F20202 		movt	r2, 16386
 181 0100 1268     		ldr	r2, [r2, #0]
 182 0102 42F48032 		orr	r2, r2, #65536
 183 0106 1A60     		str	r2, [r3, #0]
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 184              		.loc 1 285 0
 185 0108 0DE0     		b	.L2
 186              	.L5:
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 187              		.loc 1 289 0
 188 010a 4FF48053 		mov	r3, #4096
 189 010e C4F20203 		movt	r3, 16386
 190 0112 4FF48052 		mov	r2, #4096
 191 0116 C4F20202 		movt	r2, 16386
 192 011a 1268     		ldr	r2, [r2, #0]
 193 011c 42F4A022 		orr	r2, r2, #327680
 194 0120 1A60     		str	r2, [r3, #0]
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 195              		.loc 1 290 0
 196 0122 00E0     		b	.L2
 197              	.L7:
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 198              		.loc 1 293 0
 199 0124 00BF     		nop
 200              	.L2:
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 201              		.loc 1 295 0
 202 0126 07F10C07 		add	r7, r7, #12
 203 012a BD46     		mov	sp, r7
 204 012c 80BC     		pop	{r7}
 205 012e 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE30:
 209              		.align	2
 210              		.global	RCC_WaitForHSEStartUp
 211              		.thumb
 212              		.thumb_func
 214              	RCC_WaitForHSEStartUp:
 215              	.LFB31:
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 216              		.loc 1 305 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0130 80B5     		push	{r7, lr}
 221              	.LCFI5:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 14, -4
 224              		.cfi_offset 7, -8
 225 0132 82B0     		sub	sp, sp, #8
 226              	.LCFI6:
 227              		.cfi_def_cfa_offset 16
 228 0134 00AF     		add	r7, sp, #0
 229              	.LCFI7:
 230              		.cfi_def_cfa_register 7
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 231              		.loc 1 306 0
 232 0136 4FF00003 		mov	r3, #0
 233 013a 3B60     		str	r3, [r7, #0]
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 234              		.loc 1 307 0
 235 013c 4FF00003 		mov	r3, #0
 236 0140 FB71     		strb	r3, [r7, #7]
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 237              		.loc 1 308 0
 238 0142 4FF00003 		mov	r3, #0
 239 0146 BB71     		strb	r3, [r7, #6]
 240              	.L10:
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 241              		.loc 1 313 0 discriminator 1
 242 0148 4FF03100 		mov	r0, #49
 243 014c FFF7FEFF 		bl	RCC_GetFlagStatus
 244 0150 0346     		mov	r3, r0
 245 0152 BB71     		strb	r3, [r7, #6]
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 246              		.loc 1 314 0 discriminator 1
 247 0154 3B68     		ldr	r3, [r7, #0]
 248 0156 03F10103 		add	r3, r3, #1
 249 015a 3B60     		str	r3, [r7, #0]
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 250              		.loc 1 315 0 discriminator 1
 251 015c 3B68     		ldr	r3, [r7, #0]
 252 015e B3F5A06F 		cmp	r3, #1280
 253 0162 02D0     		beq	.L9
 254 0164 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 255 0166 002B     		cmp	r3, #0
 256 0168 EED0     		beq	.L10
 257              	.L9:
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 258              		.loc 1 317 0
 259 016a 4FF03100 		mov	r0, #49
 260 016e FFF7FEFF 		bl	RCC_GetFlagStatus
 261 0172 0346     		mov	r3, r0
 262 0174 002B     		cmp	r3, #0
 263 0176 03D0     		beq	.L11
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 264              		.loc 1 319 0
 265 0178 4FF00103 		mov	r3, #1
 266 017c FB71     		strb	r3, [r7, #7]
 267 017e 02E0     		b	.L12
 268              	.L11:
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 269              		.loc 1 323 0
 270 0180 4FF00003 		mov	r3, #0
 271 0184 FB71     		strb	r3, [r7, #7]
 272              	.L12:
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 273              		.loc 1 325 0
 274 0186 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 275              		.loc 1 326 0
 276 0188 1846     		mov	r0, r3
 277 018a 07F10807 		add	r7, r7, #8
 278 018e BD46     		mov	sp, r7
 279 0190 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE31:
 283 0192 00BF     		.align	2
 284              		.global	RCC_AdjustHSICalibrationValue
 285              		.thumb
 286              		.thumb_func
 288              	RCC_AdjustHSICalibrationValue:
 289              	.LFB32:
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 290              		.loc 1 335 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 16
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 295 0194 80B4     		push	{r7}
 296              	.LCFI8:
 297              		.cfi_def_cfa_offset 4
 298              		.cfi_offset 7, -4
 299 0196 85B0     		sub	sp, sp, #20
 300              	.LCFI9:
 301              		.cfi_def_cfa_offset 24
 302 0198 00AF     		add	r7, sp, #0
 303              	.LCFI10:
 304              		.cfi_def_cfa_register 7
 305 019a 0346     		mov	r3, r0
 306 019c FB71     		strb	r3, [r7, #7]
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 307              		.loc 1 336 0
 308 019e 4FF00003 		mov	r3, #0
 309 01a2 FB60     		str	r3, [r7, #12]
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 310              		.loc 1 339 0
 311 01a4 4FF48053 		mov	r3, #4096
 312 01a8 C4F20203 		movt	r3, 16386
 313 01ac 1B68     		ldr	r3, [r3, #0]
 314 01ae FB60     		str	r3, [r7, #12]
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 315              		.loc 1 341 0
 316 01b0 FB68     		ldr	r3, [r7, #12]
 317 01b2 23F0F803 		bic	r3, r3, #248
 318 01b6 FB60     		str	r3, [r7, #12]
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 319              		.loc 1 343 0
 320 01b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 321 01ba 4FEAC303 		lsl	r3, r3, #3
 322 01be FA68     		ldr	r2, [r7, #12]
 323 01c0 1343     		orrs	r3, r3, r2
 324 01c2 FB60     		str	r3, [r7, #12]
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 325              		.loc 1 345 0
 326 01c4 4FF48053 		mov	r3, #4096
 327 01c8 C4F20203 		movt	r3, 16386
 328 01cc FA68     		ldr	r2, [r7, #12]
 329 01ce 1A60     		str	r2, [r3, #0]
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 330              		.loc 1 346 0
 331 01d0 07F11407 		add	r7, r7, #20
 332 01d4 BD46     		mov	sp, r7
 333 01d6 80BC     		pop	{r7}
 334 01d8 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE32:
 338 01da 00BF     		.align	2
 339              		.global	RCC_HSICmd
 340              		.thumb
 341              		.thumb_func
 343              	RCC_HSICmd:
 344              	.LFB33:
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 345              		.loc 1 355 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 01dc 80B4     		push	{r7}
 351              	.LCFI11:
 352              		.cfi_def_cfa_offset 4
 353              		.cfi_offset 7, -4
 354 01de 83B0     		sub	sp, sp, #12
 355              	.LCFI12:
 356              		.cfi_def_cfa_offset 16
 357 01e0 00AF     		add	r7, sp, #0
 358              	.LCFI13:
 359              		.cfi_def_cfa_register 7
 360 01e2 0346     		mov	r3, r0
 361 01e4 FB71     		strb	r3, [r7, #7]
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 362              		.loc 1 358 0
 363 01e6 4FF00003 		mov	r3, #0
 364 01ea C4F24223 		movt	r3, 16962
 365 01ee FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 366 01f0 1A60     		str	r2, [r3, #0]
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 367              		.loc 1 359 0
 368 01f2 07F10C07 		add	r7, r7, #12
 369 01f6 BD46     		mov	sp, r7
 370 01f8 80BC     		pop	{r7}
 371 01fa 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE33:
 375              		.align	2
 376              		.global	RCC_PLLConfig
 377              		.thumb
 378              		.thumb_func
 380              	RCC_PLLConfig:
 381              	.LFB34:
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 382              		.loc 1 379 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 16
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 01fc 80B4     		push	{r7}
 388              	.LCFI14:
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 01fe 85B0     		sub	sp, sp, #20
 392              	.LCFI15:
 393              		.cfi_def_cfa_offset 24
 394 0200 00AF     		add	r7, sp, #0
 395              	.LCFI16:
 396              		.cfi_def_cfa_register 7
 397 0202 7860     		str	r0, [r7, #4]
 398 0204 3960     		str	r1, [r7, #0]
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 399              		.loc 1 380 0
 400 0206 4FF00003 		mov	r3, #0
 401 020a FB60     		str	r3, [r7, #12]
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 402              		.loc 1 386 0
 403 020c 4FF48053 		mov	r3, #4096
 404 0210 C4F20203 		movt	r3, 16386
 405 0214 5B68     		ldr	r3, [r3, #4]
 406 0216 FB60     		str	r3, [r7, #12]
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 407              		.loc 1 388 0
 408 0218 FB68     		ldr	r3, [r7, #12]
 409 021a 23F47413 		bic	r3, r3, #3997696
 410 021e FB60     		str	r3, [r7, #12]
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 411              		.loc 1 390 0
 412 0220 7A68     		ldr	r2, [r7, #4]
 413 0222 3B68     		ldr	r3, [r7, #0]
 414 0224 1343     		orrs	r3, r3, r2
 415 0226 FA68     		ldr	r2, [r7, #12]
 416 0228 1343     		orrs	r3, r3, r2
 417 022a FB60     		str	r3, [r7, #12]
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 418              		.loc 1 392 0
 419 022c 4FF48053 		mov	r3, #4096
 420 0230 C4F20203 		movt	r3, 16386
 421 0234 FA68     		ldr	r2, [r7, #12]
 422 0236 5A60     		str	r2, [r3, #4]
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 423              		.loc 1 393 0
 424 0238 07F11407 		add	r7, r7, #20
 425 023c BD46     		mov	sp, r7
 426 023e 80BC     		pop	{r7}
 427 0240 7047     		bx	lr
 428              		.cfi_endproc
 429              	.LFE34:
 431 0242 00BF     		.align	2
 432              		.global	RCC_PLLCmd
 433              		.thumb
 434              		.thumb_func
 436              	RCC_PLLCmd:
 437              	.LFB35:
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 438              		.loc 1 402 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 8
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0244 80B4     		push	{r7}
 444              	.LCFI17:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 7, -4
 447 0246 83B0     		sub	sp, sp, #12
 448              	.LCFI18:
 449              		.cfi_def_cfa_offset 16
 450 0248 00AF     		add	r7, sp, #0
 451              	.LCFI19:
 452              		.cfi_def_cfa_register 7
 453 024a 0346     		mov	r3, r0
 454 024c FB71     		strb	r3, [r7, #7]
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 455              		.loc 1 406 0
 456 024e 4FF06003 		mov	r3, #96
 457 0252 C4F24223 		movt	r3, 16962
 458 0256 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 459 0258 1A60     		str	r2, [r3, #0]
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 460              		.loc 1 407 0
 461 025a 07F10C07 		add	r7, r7, #12
 462 025e BD46     		mov	sp, r7
 463 0260 80BC     		pop	{r7}
 464 0262 7047     		bx	lr
 465              		.cfi_endproc
 466              	.LFE35:
 468              		.align	2
 469              		.global	RCC_PREDIV1Config
 470              		.thumb
 471              		.thumb_func
 473              	RCC_PREDIV1Config:
 474              	.LFB36:
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 475              		.loc 1 427 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 16
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0264 80B4     		push	{r7}
 481              	.LCFI20:
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 0266 85B0     		sub	sp, sp, #20
 485              	.LCFI21:
 486              		.cfi_def_cfa_offset 24
 487 0268 00AF     		add	r7, sp, #0
 488              	.LCFI22:
 489              		.cfi_def_cfa_register 7
 490 026a 7860     		str	r0, [r7, #4]
 491 026c 3960     		str	r1, [r7, #0]
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 492              		.loc 1 428 0
 493 026e 4FF00003 		mov	r3, #0
 494 0272 FB60     		str	r3, [r7, #12]
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 495              		.loc 1 434 0
 496 0274 4FF48053 		mov	r3, #4096
 497 0278 C4F20203 		movt	r3, 16386
 498 027c DB6A     		ldr	r3, [r3, #44]
 499 027e FB60     		str	r3, [r7, #12]
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 500              		.loc 1 436 0
 501 0280 FB68     		ldr	r3, [r7, #12]
 502 0282 23F48033 		bic	r3, r3, #65536
 503 0286 23F00F03 		bic	r3, r3, #15
 504 028a FB60     		str	r3, [r7, #12]
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 505              		.loc 1 438 0
 506 028c 7A68     		ldr	r2, [r7, #4]
 507 028e 3B68     		ldr	r3, [r7, #0]
 508 0290 1343     		orrs	r3, r3, r2
 509 0292 FA68     		ldr	r2, [r7, #12]
 510 0294 1343     		orrs	r3, r3, r2
 511 0296 FB60     		str	r3, [r7, #12]
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 512              		.loc 1 440 0
 513 0298 4FF48053 		mov	r3, #4096
 514 029c C4F20203 		movt	r3, 16386
 515 02a0 FA68     		ldr	r2, [r7, #12]
 516 02a2 DA62     		str	r2, [r3, #44]
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 517              		.loc 1 441 0
 518 02a4 07F11407 		add	r7, r7, #20
 519 02a8 BD46     		mov	sp, r7
 520 02aa 80BC     		pop	{r7}
 521 02ac 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE36:
 525 02ae 00BF     		.align	2
 526              		.global	RCC_SYSCLKConfig
 527              		.thumb
 528              		.thumb_func
 530              	RCC_SYSCLKConfig:
 531              	.LFB37:
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 532              		.loc 1 565 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537 02b0 80B4     		push	{r7}
 538              	.LCFI23:
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 02b2 85B0     		sub	sp, sp, #20
 542              	.LCFI24:
 543              		.cfi_def_cfa_offset 24
 544 02b4 00AF     		add	r7, sp, #0
 545              	.LCFI25:
 546              		.cfi_def_cfa_register 7
 547 02b6 7860     		str	r0, [r7, #4]
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 548              		.loc 1 566 0
 549 02b8 4FF00003 		mov	r3, #0
 550 02bc FB60     		str	r3, [r7, #12]
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 551              		.loc 1 569 0
 552 02be 4FF48053 		mov	r3, #4096
 553 02c2 C4F20203 		movt	r3, 16386
 554 02c6 5B68     		ldr	r3, [r3, #4]
 555 02c8 FB60     		str	r3, [r7, #12]
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 556              		.loc 1 571 0
 557 02ca FB68     		ldr	r3, [r7, #12]
 558 02cc 23F00303 		bic	r3, r3, #3
 559 02d0 FB60     		str	r3, [r7, #12]
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 560              		.loc 1 573 0
 561 02d2 FA68     		ldr	r2, [r7, #12]
 562 02d4 7B68     		ldr	r3, [r7, #4]
 563 02d6 1343     		orrs	r3, r3, r2
 564 02d8 FB60     		str	r3, [r7, #12]
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 565              		.loc 1 575 0
 566 02da 4FF48053 		mov	r3, #4096
 567 02de C4F20203 		movt	r3, 16386
 568 02e2 FA68     		ldr	r2, [r7, #12]
 569 02e4 5A60     		str	r2, [r3, #4]
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 570              		.loc 1 576 0
 571 02e6 07F11407 		add	r7, r7, #20
 572 02ea BD46     		mov	sp, r7
 573 02ec 80BC     		pop	{r7}
 574 02ee 7047     		bx	lr
 575              		.cfi_endproc
 576              	.LFE37:
 578              		.align	2
 579              		.global	RCC_GetSYSCLKSource
 580              		.thumb
 581              		.thumb_func
 583              	RCC_GetSYSCLKSource:
 584              	.LFB38:
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 585              		.loc 1 588 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 590 02f0 80B4     		push	{r7}
 591              	.LCFI26:
 592              		.cfi_def_cfa_offset 4
 593              		.cfi_offset 7, -4
 594 02f2 00AF     		add	r7, sp, #0
 595              	.LCFI27:
 596              		.cfi_def_cfa_register 7
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 597              		.loc 1 589 0
 598 02f4 4FF48053 		mov	r3, #4096
 599 02f8 C4F20203 		movt	r3, 16386
 600 02fc 5B68     		ldr	r3, [r3, #4]
 601 02fe DBB2     		uxtb	r3, r3
 602 0300 03F00C03 		and	r3, r3, #12
 603 0304 DBB2     		uxtb	r3, r3
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 604              		.loc 1 590 0
 605 0306 1846     		mov	r0, r3
 606 0308 BD46     		mov	sp, r7
 607 030a 80BC     		pop	{r7}
 608 030c 7047     		bx	lr
 609              		.cfi_endproc
 610              	.LFE38:
 612 030e 00BF     		.align	2
 613              		.global	RCC_HCLKConfig
 614              		.thumb
 615              		.thumb_func
 617              	RCC_HCLKConfig:
 618              	.LFB39:
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 619              		.loc 1 609 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 16
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624 0310 80B4     		push	{r7}
 625              	.LCFI28:
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 7, -4
 628 0312 85B0     		sub	sp, sp, #20
 629              	.LCFI29:
 630              		.cfi_def_cfa_offset 24
 631 0314 00AF     		add	r7, sp, #0
 632              	.LCFI30:
 633              		.cfi_def_cfa_register 7
 634 0316 7860     		str	r0, [r7, #4]
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 635              		.loc 1 610 0
 636 0318 4FF00003 		mov	r3, #0
 637 031c FB60     		str	r3, [r7, #12]
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 638              		.loc 1 613 0
 639 031e 4FF48053 		mov	r3, #4096
 640 0322 C4F20203 		movt	r3, 16386
 641 0326 5B68     		ldr	r3, [r3, #4]
 642 0328 FB60     		str	r3, [r7, #12]
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 643              		.loc 1 615 0
 644 032a FB68     		ldr	r3, [r7, #12]
 645 032c 23F0F003 		bic	r3, r3, #240
 646 0330 FB60     		str	r3, [r7, #12]
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 647              		.loc 1 617 0
 648 0332 FA68     		ldr	r2, [r7, #12]
 649 0334 7B68     		ldr	r3, [r7, #4]
 650 0336 1343     		orrs	r3, r3, r2
 651 0338 FB60     		str	r3, [r7, #12]
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 652              		.loc 1 619 0
 653 033a 4FF48053 		mov	r3, #4096
 654 033e C4F20203 		movt	r3, 16386
 655 0342 FA68     		ldr	r2, [r7, #12]
 656 0344 5A60     		str	r2, [r3, #4]
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 657              		.loc 1 620 0
 658 0346 07F11407 		add	r7, r7, #20
 659 034a BD46     		mov	sp, r7
 660 034c 80BC     		pop	{r7}
 661 034e 7047     		bx	lr
 662              		.cfi_endproc
 663              	.LFE39:
 665              		.align	2
 666              		.global	RCC_PCLK1Config
 667              		.thumb
 668              		.thumb_func
 670              	RCC_PCLK1Config:
 671              	.LFB40:
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 672              		.loc 1 635 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0350 80B4     		push	{r7}
 678              	.LCFI31:
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0352 85B0     		sub	sp, sp, #20
 682              	.LCFI32:
 683              		.cfi_def_cfa_offset 24
 684 0354 00AF     		add	r7, sp, #0
 685              	.LCFI33:
 686              		.cfi_def_cfa_register 7
 687 0356 7860     		str	r0, [r7, #4]
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 688              		.loc 1 636 0
 689 0358 4FF00003 		mov	r3, #0
 690 035c FB60     		str	r3, [r7, #12]
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 691              		.loc 1 639 0
 692 035e 4FF48053 		mov	r3, #4096
 693 0362 C4F20203 		movt	r3, 16386
 694 0366 5B68     		ldr	r3, [r3, #4]
 695 0368 FB60     		str	r3, [r7, #12]
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 696              		.loc 1 641 0
 697 036a FB68     		ldr	r3, [r7, #12]
 698 036c 23F4E063 		bic	r3, r3, #1792
 699 0370 FB60     		str	r3, [r7, #12]
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 700              		.loc 1 643 0
 701 0372 FA68     		ldr	r2, [r7, #12]
 702 0374 7B68     		ldr	r3, [r7, #4]
 703 0376 1343     		orrs	r3, r3, r2
 704 0378 FB60     		str	r3, [r7, #12]
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 705              		.loc 1 645 0
 706 037a 4FF48053 		mov	r3, #4096
 707 037e C4F20203 		movt	r3, 16386
 708 0382 FA68     		ldr	r2, [r7, #12]
 709 0384 5A60     		str	r2, [r3, #4]
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 710              		.loc 1 646 0
 711 0386 07F11407 		add	r7, r7, #20
 712 038a BD46     		mov	sp, r7
 713 038c 80BC     		pop	{r7}
 714 038e 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE40:
 718              		.align	2
 719              		.global	RCC_PCLK2Config
 720              		.thumb
 721              		.thumb_func
 723              	RCC_PCLK2Config:
 724              	.LFB41:
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 725              		.loc 1 661 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 16
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 0390 80B4     		push	{r7}
 731              	.LCFI34:
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 0392 85B0     		sub	sp, sp, #20
 735              	.LCFI35:
 736              		.cfi_def_cfa_offset 24
 737 0394 00AF     		add	r7, sp, #0
 738              	.LCFI36:
 739              		.cfi_def_cfa_register 7
 740 0396 7860     		str	r0, [r7, #4]
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 741              		.loc 1 662 0
 742 0398 4FF00003 		mov	r3, #0
 743 039c FB60     		str	r3, [r7, #12]
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 744              		.loc 1 665 0
 745 039e 4FF48053 		mov	r3, #4096
 746 03a2 C4F20203 		movt	r3, 16386
 747 03a6 5B68     		ldr	r3, [r3, #4]
 748 03a8 FB60     		str	r3, [r7, #12]
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 749              		.loc 1 667 0
 750 03aa FB68     		ldr	r3, [r7, #12]
 751 03ac 23F46053 		bic	r3, r3, #14336
 752 03b0 FB60     		str	r3, [r7, #12]
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 753              		.loc 1 669 0
 754 03b2 7B68     		ldr	r3, [r7, #4]
 755 03b4 4FEAC303 		lsl	r3, r3, #3
 756 03b8 FA68     		ldr	r2, [r7, #12]
 757 03ba 1343     		orrs	r3, r3, r2
 758 03bc FB60     		str	r3, [r7, #12]
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 759              		.loc 1 671 0
 760 03be 4FF48053 		mov	r3, #4096
 761 03c2 C4F20203 		movt	r3, 16386
 762 03c6 FA68     		ldr	r2, [r7, #12]
 763 03c8 5A60     		str	r2, [r3, #4]
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 764              		.loc 1 672 0
 765 03ca 07F11407 		add	r7, r7, #20
 766 03ce BD46     		mov	sp, r7
 767 03d0 80BC     		pop	{r7}
 768 03d2 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE41:
 772              		.align	2
 773              		.global	RCC_ITConfig
 774              		.thumb
 775              		.thumb_func
 777              	RCC_ITConfig:
 778              	.LFB42:
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 779              		.loc 1 701 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 8
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784 03d4 80B4     		push	{r7}
 785              	.LCFI37:
 786              		.cfi_def_cfa_offset 4
 787              		.cfi_offset 7, -4
 788 03d6 83B0     		sub	sp, sp, #12
 789              	.LCFI38:
 790              		.cfi_def_cfa_offset 16
 791 03d8 00AF     		add	r7, sp, #0
 792              	.LCFI39:
 793              		.cfi_def_cfa_register 7
 794 03da 0246     		mov	r2, r0
 795 03dc 0B46     		mov	r3, r1
 796 03de FA71     		strb	r2, [r7, #7]
 797 03e0 BB71     		strb	r3, [r7, #6]
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 798              		.loc 1 705 0
 799 03e2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 800 03e4 002B     		cmp	r3, #0
 801 03e6 0ED0     		beq	.L24
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 802              		.loc 1 708 0
 803 03e8 41F20903 		movw	r3, #4105
 804 03ec C4F20203 		movt	r3, 16386
 805 03f0 41F20902 		movw	r2, #4105
 806 03f4 C4F20202 		movt	r2, 16386
 807 03f8 1278     		ldrb	r2, [r2, #0]
 808 03fa D1B2     		uxtb	r1, r2
 809 03fc FA79     		ldrb	r2, [r7, #7]
 810 03fe 0A43     		orrs	r2, r2, r1
 811 0400 D2B2     		uxtb	r2, r2
 812 0402 1A70     		strb	r2, [r3, #0]
 813 0404 10E0     		b	.L23
 814              	.L24:
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 815              		.loc 1 713 0
 816 0406 41F20903 		movw	r3, #4105
 817 040a C4F20203 		movt	r3, 16386
 818 040e 41F20902 		movw	r2, #4105
 819 0412 C4F20202 		movt	r2, 16386
 820 0416 1278     		ldrb	r2, [r2, #0]
 821 0418 D1B2     		uxtb	r1, r2
 822 041a FA79     		ldrb	r2, [r7, #7]
 823 041c 6FEA0202 		mvn	r2, r2
 824 0420 D2B2     		uxtb	r2, r2
 825 0422 0A40     		ands	r2, r2, r1
 826 0424 D2B2     		uxtb	r2, r2
 827 0426 1A70     		strb	r2, [r3, #0]
 828              	.L23:
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 829              		.loc 1 715 0
 830 0428 07F10C07 		add	r7, r7, #12
 831 042c BD46     		mov	sp, r7
 832 042e 80BC     		pop	{r7}
 833 0430 7047     		bx	lr
 834              		.cfi_endproc
 835              	.LFE42:
 837 0432 00BF     		.align	2
 838              		.global	RCC_USBCLKConfig
 839              		.thumb
 840              		.thumb_func
 842              	RCC_USBCLKConfig:
 843              	.LFB43:
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 844              		.loc 1 729 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 8
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849 0434 80B4     		push	{r7}
 850              	.LCFI40:
 851              		.cfi_def_cfa_offset 4
 852              		.cfi_offset 7, -4
 853 0436 83B0     		sub	sp, sp, #12
 854              	.LCFI41:
 855              		.cfi_def_cfa_offset 16
 856 0438 00AF     		add	r7, sp, #0
 857              	.LCFI42:
 858              		.cfi_def_cfa_register 7
 859 043a 7860     		str	r0, [r7, #4]
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 860              		.loc 1 733 0
 861 043c 4FF0D803 		mov	r3, #216
 862 0440 C4F24223 		movt	r3, 16962
 863 0444 7A68     		ldr	r2, [r7, #4]
 864 0446 1A60     		str	r2, [r3, #0]
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 865              		.loc 1 734 0
 866 0448 07F10C07 		add	r7, r7, #12
 867 044c BD46     		mov	sp, r7
 868 044e 80BC     		pop	{r7}
 869 0450 7047     		bx	lr
 870              		.cfi_endproc
 871              	.LFE43:
 873 0452 00BF     		.align	2
 874              		.global	RCC_ADCCLKConfig
 875              		.thumb
 876              		.thumb_func
 878              	RCC_ADCCLKConfig:
 879              	.LFB44:
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 880              		.loc 1 767 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 16
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885 0454 80B4     		push	{r7}
 886              	.LCFI43:
 887              		.cfi_def_cfa_offset 4
 888              		.cfi_offset 7, -4
 889 0456 85B0     		sub	sp, sp, #20
 890              	.LCFI44:
 891              		.cfi_def_cfa_offset 24
 892 0458 00AF     		add	r7, sp, #0
 893              	.LCFI45:
 894              		.cfi_def_cfa_register 7
 895 045a 7860     		str	r0, [r7, #4]
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 896              		.loc 1 768 0
 897 045c 4FF00003 		mov	r3, #0
 898 0460 FB60     		str	r3, [r7, #12]
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 899              		.loc 1 771 0
 900 0462 4FF48053 		mov	r3, #4096
 901 0466 C4F20203 		movt	r3, 16386
 902 046a 5B68     		ldr	r3, [r3, #4]
 903 046c FB60     		str	r3, [r7, #12]
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 904              		.loc 1 773 0
 905 046e FB68     		ldr	r3, [r7, #12]
 906 0470 23F44043 		bic	r3, r3, #49152
 907 0474 FB60     		str	r3, [r7, #12]
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 908              		.loc 1 775 0
 909 0476 FA68     		ldr	r2, [r7, #12]
 910 0478 7B68     		ldr	r3, [r7, #4]
 911 047a 1343     		orrs	r3, r3, r2
 912 047c FB60     		str	r3, [r7, #12]
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 913              		.loc 1 777 0
 914 047e 4FF48053 		mov	r3, #4096
 915 0482 C4F20203 		movt	r3, 16386
 916 0486 FA68     		ldr	r2, [r7, #12]
 917 0488 5A60     		str	r2, [r3, #4]
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 918              		.loc 1 778 0
 919 048a 07F11407 		add	r7, r7, #20
 920 048e BD46     		mov	sp, r7
 921 0490 80BC     		pop	{r7}
 922 0492 7047     		bx	lr
 923              		.cfi_endproc
 924              	.LFE44:
 926              		.align	2
 927              		.global	RCC_LSEConfig
 928              		.thumb
 929              		.thumb_func
 931              	RCC_LSEConfig:
 932              	.LFB45:
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 933              		.loc 1 830 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 8
 936              		@ frame_needed = 1, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 938 0494 80B4     		push	{r7}
 939              	.LCFI46:
 940              		.cfi_def_cfa_offset 4
 941              		.cfi_offset 7, -4
 942 0496 83B0     		sub	sp, sp, #12
 943              	.LCFI47:
 944              		.cfi_def_cfa_offset 16
 945 0498 00AF     		add	r7, sp, #0
 946              	.LCFI48:
 947              		.cfi_def_cfa_register 7
 948 049a 0346     		mov	r3, r0
 949 049c FB71     		strb	r3, [r7, #7]
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 950              		.loc 1 835 0
 951 049e 4FF48153 		mov	r3, #4128
 952 04a2 C4F20203 		movt	r3, 16386
 953 04a6 4FF00002 		mov	r2, #0
 954 04aa 1A70     		strb	r2, [r3, #0]
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 955              		.loc 1 837 0
 956 04ac 4FF48153 		mov	r3, #4128
 957 04b0 C4F20203 		movt	r3, 16386
 958 04b4 4FF00002 		mov	r2, #0
 959 04b8 1A70     		strb	r2, [r3, #0]
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 960              		.loc 1 839 0
 961 04ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 962 04bc 012B     		cmp	r3, #1
 963 04be 02D0     		beq	.L30
 964 04c0 042B     		cmp	r3, #4
 965 04c2 08D0     		beq	.L31
 966 04c4 0FE0     		b	.L33
 967              	.L30:
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 968              		.loc 1 843 0
 969 04c6 4FF48153 		mov	r3, #4128
 970 04ca C4F20203 		movt	r3, 16386
 971 04ce 4FF00102 		mov	r2, #1
 972 04d2 1A70     		strb	r2, [r3, #0]
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 973              		.loc 1 844 0
 974 04d4 08E0     		b	.L28
 975              	.L31:
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 976              		.loc 1 848 0
 977 04d6 4FF48153 		mov	r3, #4128
 978 04da C4F20203 		movt	r3, 16386
 979 04de 4FF00502 		mov	r2, #5
 980 04e2 1A70     		strb	r2, [r3, #0]
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 981              		.loc 1 849 0
 982 04e4 00E0     		b	.L28
 983              	.L33:
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 984              		.loc 1 852 0
 985 04e6 00BF     		nop
 986              	.L28:
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 987              		.loc 1 854 0
 988 04e8 07F10C07 		add	r7, r7, #12
 989 04ec BD46     		mov	sp, r7
 990 04ee 80BC     		pop	{r7}
 991 04f0 7047     		bx	lr
 992              		.cfi_endproc
 993              	.LFE45:
 995 04f2 00BF     		.align	2
 996              		.global	RCC_LSICmd
 997              		.thumb
 998              		.thumb_func
 1000              	RCC_LSICmd:
 1001              	.LFB46:
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1002              		.loc 1 863 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 1007 04f4 80B4     		push	{r7}
 1008              	.LCFI49:
 1009              		.cfi_def_cfa_offset 4
 1010              		.cfi_offset 7, -4
 1011 04f6 83B0     		sub	sp, sp, #12
 1012              	.LCFI50:
 1013              		.cfi_def_cfa_offset 16
 1014 04f8 00AF     		add	r7, sp, #0
 1015              	.LCFI51:
 1016              		.cfi_def_cfa_register 7
 1017 04fa 0346     		mov	r3, r0
 1018 04fc FB71     		strb	r3, [r7, #7]
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 1019              		.loc 1 866 0
 1020 04fe 4FF49063 		mov	r3, #1152
 1021 0502 C4F24223 		movt	r3, 16962
 1022 0506 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1023 0508 1A60     		str	r2, [r3, #0]
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1024              		.loc 1 867 0
 1025 050a 07F10C07 		add	r7, r7, #12
 1026 050e BD46     		mov	sp, r7
 1027 0510 80BC     		pop	{r7}
 1028 0512 7047     		bx	lr
 1029              		.cfi_endproc
 1030              	.LFE46:
 1032              		.align	2
 1033              		.global	RCC_RTCCLKConfig
 1034              		.thumb
 1035              		.thumb_func
 1037              	RCC_RTCCLKConfig:
 1038              	.LFB47:
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1039              		.loc 1 880 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 8
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044 0514 80B4     		push	{r7}
 1045              	.LCFI52:
 1046              		.cfi_def_cfa_offset 4
 1047              		.cfi_offset 7, -4
 1048 0516 83B0     		sub	sp, sp, #12
 1049              	.LCFI53:
 1050              		.cfi_def_cfa_offset 16
 1051 0518 00AF     		add	r7, sp, #0
 1052              	.LCFI54:
 1053              		.cfi_def_cfa_register 7
 1054 051a 7860     		str	r0, [r7, #4]
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1055              		.loc 1 884 0
 1056 051c 4FF48053 		mov	r3, #4096
 1057 0520 C4F20203 		movt	r3, 16386
 1058 0524 4FF48052 		mov	r2, #4096
 1059 0528 C4F20202 		movt	r2, 16386
 1060 052c 116A     		ldr	r1, [r2, #32]
 1061 052e 7A68     		ldr	r2, [r7, #4]
 1062 0530 0A43     		orrs	r2, r2, r1
 1063 0532 1A62     		str	r2, [r3, #32]
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1064              		.loc 1 885 0
 1065 0534 07F10C07 		add	r7, r7, #12
 1066 0538 BD46     		mov	sp, r7
 1067 053a 80BC     		pop	{r7}
 1068 053c 7047     		bx	lr
 1069              		.cfi_endproc
 1070              	.LFE47:
 1072 053e 00BF     		.align	2
 1073              		.global	RCC_RTCCLKCmd
 1074              		.thumb
 1075              		.thumb_func
 1077              	RCC_RTCCLKCmd:
 1078              	.LFB48:
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1079              		.loc 1 894 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 8
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084 0540 80B4     		push	{r7}
 1085              	.LCFI55:
 1086              		.cfi_def_cfa_offset 4
 1087              		.cfi_offset 7, -4
 1088 0542 83B0     		sub	sp, sp, #12
 1089              	.LCFI56:
 1090              		.cfi_def_cfa_offset 16
 1091 0544 00AF     		add	r7, sp, #0
 1092              	.LCFI57:
 1093              		.cfi_def_cfa_register 7
 1094 0546 0346     		mov	r3, r0
 1095 0548 FB71     		strb	r3, [r7, #7]
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 896:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 897:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1096              		.loc 1 897 0
 1097 054a 40F23C43 		movw	r3, #1084
 1098 054e C4F24223 		movt	r3, 16962
 1099 0552 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1100 0554 1A60     		str	r2, [r3, #0]
 898:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1101              		.loc 1 898 0
 1102 0556 07F10C07 		add	r7, r7, #12
 1103 055a BD46     		mov	sp, r7
 1104 055c 80BC     		pop	{r7}
 1105 055e 7047     		bx	lr
 1106              		.cfi_endproc
 1107              	.LFE48:
 1109              		.align	2
 1110              		.global	RCC_GetClocksFreq
 1111              		.thumb
 1112              		.thumb_func
 1114              	RCC_GetClocksFreq:
 1115              	.LFB49:
 899:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 900:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 901:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 902:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 903:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 904:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 905:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 906:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 907:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 908:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 909:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1116              		.loc 1 909 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 32
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 1121 0560 80B4     		push	{r7}
 1122              	.LCFI58:
 1123              		.cfi_def_cfa_offset 4
 1124              		.cfi_offset 7, -4
 1125 0562 89B0     		sub	sp, sp, #36
 1126              	.LCFI59:
 1127              		.cfi_def_cfa_offset 40
 1128 0564 00AF     		add	r7, sp, #0
 1129              	.LCFI60:
 1130              		.cfi_def_cfa_register 7
 1131 0566 7860     		str	r0, [r7, #4]
 910:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 1132              		.loc 1 910 0
 1133 0568 4FF00003 		mov	r3, #0
 1134 056c FB61     		str	r3, [r7, #28]
 1135 056e 4FF00003 		mov	r3, #0
 1136 0572 BB61     		str	r3, [r7, #24]
 1137 0574 4FF00003 		mov	r3, #0
 1138 0578 7B61     		str	r3, [r7, #20]
 1139 057a 4FF00003 		mov	r3, #0
 1140 057e 3B61     		str	r3, [r7, #16]
 911:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 912:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 913:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 914:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 915:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 916:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 917:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 1141              		.loc 1 917 0
 1142 0580 4FF00003 		mov	r3, #0
 1143 0584 FB60     		str	r3, [r7, #12]
 918:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 919:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 920:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 921:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 1144              		.loc 1 921 0
 1145 0586 4FF48053 		mov	r3, #4096
 1146 058a C4F20203 		movt	r3, 16386
 1147 058e 5B68     		ldr	r3, [r3, #4]
 1148 0590 03F00C03 		and	r3, r3, #12
 1149 0594 FB61     		str	r3, [r7, #28]
 922:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 923:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 1150              		.loc 1 923 0
 1151 0596 FB69     		ldr	r3, [r7, #28]
 1152 0598 042B     		cmp	r3, #4
 1153 059a 0AD0     		beq	.L40
 1154 059c 082B     		cmp	r3, #8
 1155 059e 0FD0     		beq	.L41
 1156 05a0 002B     		cmp	r3, #0
 1157 05a2 47D1     		bne	.L45
 1158              	.L39:
 924:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 925:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 926:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1159              		.loc 1 926 0
 1160 05a4 7A68     		ldr	r2, [r7, #4]
 1161 05a6 4FF49053 		mov	r3, #4608
 1162 05aa C0F27A03 		movt	r3, 122
 1163 05ae 1360     		str	r3, [r2, #0]
 927:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1164              		.loc 1 927 0
 1165 05b0 47E0     		b	.L42
 1166              	.L40:
 928:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 929:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1167              		.loc 1 929 0
 1168 05b2 7A68     		ldr	r2, [r7, #4]
 1169 05b4 4FF49053 		mov	r3, #4608
 1170 05b8 C0F27A03 		movt	r3, 122
 1171 05bc 1360     		str	r3, [r2, #0]
 930:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1172              		.loc 1 930 0
 1173 05be 40E0     		b	.L42
 1174              	.L41:
 931:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 932:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 933:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 934:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 1175              		.loc 1 934 0
 1176 05c0 4FF48053 		mov	r3, #4096
 1177 05c4 C4F20203 		movt	r3, 16386
 1178 05c8 5B68     		ldr	r3, [r3, #4]
 1179 05ca 03F47013 		and	r3, r3, #3932160
 1180 05ce BB61     		str	r3, [r7, #24]
 935:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 1181              		.loc 1 935 0
 1182 05d0 4FF48053 		mov	r3, #4096
 1183 05d4 C4F20203 		movt	r3, 16386
 1184 05d8 5B68     		ldr	r3, [r3, #4]
 1185 05da 03F48033 		and	r3, r3, #65536
 1186 05de 7B61     		str	r3, [r7, #20]
 936:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 937:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 938:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1187              		.loc 1 938 0
 1188 05e0 BB69     		ldr	r3, [r7, #24]
 1189 05e2 4FEA9343 		lsr	r3, r3, #18
 1190 05e6 03F10203 		add	r3, r3, #2
 1191 05ea BB61     		str	r3, [r7, #24]
 939:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 940:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 1192              		.loc 1 940 0
 1193 05ec 7B69     		ldr	r3, [r7, #20]
 1194 05ee 002B     		cmp	r3, #0
 1195 05f0 09D1     		bne	.L43
 941:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 942:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 1196              		.loc 1 942 0
 1197 05f2 BA69     		ldr	r2, [r7, #24]
 1198 05f4 4FF41063 		mov	r3, #2304
 1199 05f8 C0F23D03 		movt	r3, 61
 1200 05fc 03FB02F2 		mul	r2, r3, r2
 1201 0600 7B68     		ldr	r3, [r7, #4]
 1202 0602 1A60     		str	r2, [r3, #0]
 943:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 944:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 945:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 946:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 947:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 948:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 949:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 950:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 951:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 952:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 953:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 954:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 955:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 956:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 957:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 958:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 959:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 960:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 961:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 962:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 963:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 964:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 965:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 966:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 967:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 968:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 969:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 970:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 971:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 972:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 973:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 974:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 975:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 976:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 977:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 978:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 979:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 980:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 981:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 982:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 983:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 984:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 985:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 986:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 987:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 988:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 989:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 990:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 991:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 992:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 993:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 994:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 995:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 996:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 997:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 998:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 999:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1203              		.loc 1 999 0
 1204 0604 1DE0     		b	.L42
 1205              	.L43:
 947:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 1206              		.loc 1 947 0
 1207 0606 4FF48053 		mov	r3, #4096
 1208 060a C4F20203 		movt	r3, 16386
 1209 060e DB6A     		ldr	r3, [r3, #44]
 1210 0610 03F00F03 		and	r3, r3, #15
 1211 0614 03F10103 		add	r3, r3, #1
 1212 0618 FB60     		str	r3, [r7, #12]
 949:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 1213              		.loc 1 949 0
 1214 061a 4FF49053 		mov	r3, #4608
 1215 061e C0F27A03 		movt	r3, 122
 1216 0622 FA68     		ldr	r2, [r7, #12]
 1217 0624 B3FBF2F3 		udiv	r3, r3, r2
 1218 0628 BA69     		ldr	r2, [r7, #24]
 1219 062a 02FB03F2 		mul	r2, r2, r3
 1220 062e 7B68     		ldr	r3, [r7, #4]
 1221 0630 1A60     		str	r2, [r3, #0]
 1222              		.loc 1 999 0
 1223 0632 06E0     		b	.L42
 1224              	.L45:
1000:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1001:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1002:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1225              		.loc 1 1002 0
 1226 0634 7A68     		ldr	r2, [r7, #4]
 1227 0636 4FF49053 		mov	r3, #4608
 1228 063a C0F27A03 		movt	r3, 122
 1229 063e 1360     		str	r3, [r2, #0]
1003:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1230              		.loc 1 1003 0
 1231 0640 00BF     		nop
 1232              	.L42:
1004:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1005:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1006:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1007:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 1233              		.loc 1 1008 0
 1234 0642 4FF48053 		mov	r3, #4096
 1235 0646 C4F20203 		movt	r3, 16386
 1236 064a 5B68     		ldr	r3, [r3, #4]
 1237 064c 03F0F003 		and	r3, r3, #240
 1238 0650 FB61     		str	r3, [r7, #28]
1009:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 1239              		.loc 1 1009 0
 1240 0652 FB69     		ldr	r3, [r7, #28]
 1241 0654 4FEA1313 		lsr	r3, r3, #4
 1242 0658 FB61     		str	r3, [r7, #28]
1010:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1243              		.loc 1 1010 0
 1244 065a 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1245 065e C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1246 0662 FA69     		ldr	r2, [r7, #28]
 1247 0664 9B18     		adds	r3, r3, r2
 1248 0666 1B78     		ldrb	r3, [r3, #0]
 1249 0668 DBB2     		uxtb	r3, r3
 1250 066a 3B61     		str	r3, [r7, #16]
1011:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1012:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1251              		.loc 1 1012 0
 1252 066c 7B68     		ldr	r3, [r7, #4]
 1253 066e 1A68     		ldr	r2, [r3, #0]
 1254 0670 3B69     		ldr	r3, [r7, #16]
 1255 0672 22FA03F2 		lsr	r2, r2, r3
 1256 0676 7B68     		ldr	r3, [r7, #4]
 1257 0678 5A60     		str	r2, [r3, #4]
1013:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1014:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 1258              		.loc 1 1014 0
 1259 067a 4FF48053 		mov	r3, #4096
 1260 067e C4F20203 		movt	r3, 16386
 1261 0682 5B68     		ldr	r3, [r3, #4]
 1262 0684 03F4E063 		and	r3, r3, #1792
 1263 0688 FB61     		str	r3, [r7, #28]
1015:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 1264              		.loc 1 1015 0
 1265 068a FB69     		ldr	r3, [r7, #28]
 1266 068c 4FEA1323 		lsr	r3, r3, #8
 1267 0690 FB61     		str	r3, [r7, #28]
1016:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1268              		.loc 1 1016 0
 1269 0692 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1270 0696 C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1271 069a FA69     		ldr	r2, [r7, #28]
 1272 069c 9B18     		adds	r3, r3, r2
 1273 069e 1B78     		ldrb	r3, [r3, #0]
 1274 06a0 DBB2     		uxtb	r3, r3
 1275 06a2 3B61     		str	r3, [r7, #16]
1017:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1018:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1276              		.loc 1 1018 0
 1277 06a4 7B68     		ldr	r3, [r7, #4]
 1278 06a6 5A68     		ldr	r2, [r3, #4]
 1279 06a8 3B69     		ldr	r3, [r7, #16]
 1280 06aa 22FA03F2 		lsr	r2, r2, r3
 1281 06ae 7B68     		ldr	r3, [r7, #4]
 1282 06b0 9A60     		str	r2, [r3, #8]
1019:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1020:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 1283              		.loc 1 1020 0
 1284 06b2 4FF48053 		mov	r3, #4096
 1285 06b6 C4F20203 		movt	r3, 16386
 1286 06ba 5B68     		ldr	r3, [r3, #4]
 1287 06bc 03F46053 		and	r3, r3, #14336
 1288 06c0 FB61     		str	r3, [r7, #28]
1021:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 1289              		.loc 1 1021 0
 1290 06c2 FB69     		ldr	r3, [r7, #28]
 1291 06c4 4FEAD323 		lsr	r3, r3, #11
 1292 06c8 FB61     		str	r3, [r7, #28]
1022:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1293              		.loc 1 1022 0
 1294 06ca 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1295 06ce C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1296 06d2 FA69     		ldr	r2, [r7, #28]
 1297 06d4 9B18     		adds	r3, r3, r2
 1298 06d6 1B78     		ldrb	r3, [r3, #0]
 1299 06d8 DBB2     		uxtb	r3, r3
 1300 06da 3B61     		str	r3, [r7, #16]
1023:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1024:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1301              		.loc 1 1024 0
 1302 06dc 7B68     		ldr	r3, [r7, #4]
 1303 06de 5A68     		ldr	r2, [r3, #4]
 1304 06e0 3B69     		ldr	r3, [r7, #16]
 1305 06e2 22FA03F2 		lsr	r2, r2, r3
 1306 06e6 7B68     		ldr	r3, [r7, #4]
 1307 06e8 DA60     		str	r2, [r3, #12]
1025:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1026:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 1308              		.loc 1 1026 0
 1309 06ea 4FF48053 		mov	r3, #4096
 1310 06ee C4F20203 		movt	r3, 16386
 1311 06f2 5B68     		ldr	r3, [r3, #4]
 1312 06f4 03F44043 		and	r3, r3, #49152
 1313 06f8 FB61     		str	r3, [r7, #28]
1027:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 1314              		.loc 1 1027 0
 1315 06fa FB69     		ldr	r3, [r7, #28]
 1316 06fc 4FEA9333 		lsr	r3, r3, #14
 1317 0700 FB61     		str	r3, [r7, #28]
1028:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 1318              		.loc 1 1028 0
 1319 0702 40F20003 		movw	r3, #:lower16:ADCPrescTable
 1320 0706 C0F20003 		movt	r3, #:upper16:ADCPrescTable
 1321 070a FA69     		ldr	r2, [r7, #28]
 1322 070c 9B18     		adds	r3, r3, r2
 1323 070e 1B78     		ldrb	r3, [r3, #0]
 1324 0710 DBB2     		uxtb	r3, r3
 1325 0712 3B61     		str	r3, [r7, #16]
1029:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1030:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 1326              		.loc 1 1030 0
 1327 0714 7B68     		ldr	r3, [r7, #4]
 1328 0716 DA68     		ldr	r2, [r3, #12]
 1329 0718 3B69     		ldr	r3, [r7, #16]
 1330 071a B2FBF3F2 		udiv	r2, r2, r3
 1331 071e 7B68     		ldr	r3, [r7, #4]
 1332 0720 1A61     		str	r2, [r3, #16]
1031:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1333              		.loc 1 1031 0
 1334 0722 07F12407 		add	r7, r7, #36
 1335 0726 BD46     		mov	sp, r7
 1336 0728 80BC     		pop	{r7}
 1337 072a 7047     		bx	lr
 1338              		.cfi_endproc
 1339              	.LFE49:
 1341              		.align	2
 1342              		.global	RCC_AHBPeriphClockCmd
 1343              		.thumb
 1344              		.thumb_func
 1346              	RCC_AHBPeriphClockCmd:
 1347              	.LFB50:
1032:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1033:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1034:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1035:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1036:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1037:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1038:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1039:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1040:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1041:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1042:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1043:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1044:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1045:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1046:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1047:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1048:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1049:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1050:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1051:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1052:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1053:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1054:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1055:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1056:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1057:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1058:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1059:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1060:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1061:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1062:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1063:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1064:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1065:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1348              		.loc 1 1065 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 8
 1351              		@ frame_needed = 1, uses_anonymous_args = 0
 1352              		@ link register save eliminated.
 1353 072c 80B4     		push	{r7}
 1354              	.LCFI61:
 1355              		.cfi_def_cfa_offset 4
 1356              		.cfi_offset 7, -4
 1357 072e 83B0     		sub	sp, sp, #12
 1358              	.LCFI62:
 1359              		.cfi_def_cfa_offset 16
 1360 0730 00AF     		add	r7, sp, #0
 1361              	.LCFI63:
 1362              		.cfi_def_cfa_register 7
 1363 0732 7860     		str	r0, [r7, #4]
 1364 0734 0B46     		mov	r3, r1
 1365 0736 FB70     		strb	r3, [r7, #3]
1066:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1067:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1068:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1069:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1070:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1366              		.loc 1 1070 0
 1367 0738 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1368 073a 002B     		cmp	r3, #0
 1369 073c 0CD0     		beq	.L47
1071:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1072:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1370              		.loc 1 1072 0
 1371 073e 4FF48053 		mov	r3, #4096
 1372 0742 C4F20203 		movt	r3, 16386
 1373 0746 4FF48052 		mov	r2, #4096
 1374 074a C4F20202 		movt	r2, 16386
 1375 074e 5169     		ldr	r1, [r2, #20]
 1376 0750 7A68     		ldr	r2, [r7, #4]
 1377 0752 0A43     		orrs	r2, r2, r1
 1378 0754 5A61     		str	r2, [r3, #20]
 1379 0756 0DE0     		b	.L46
 1380              	.L47:
1073:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1074:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1075:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1076:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 1381              		.loc 1 1076 0
 1382 0758 4FF48053 		mov	r3, #4096
 1383 075c C4F20203 		movt	r3, 16386
 1384 0760 4FF48052 		mov	r2, #4096
 1385 0764 C4F20202 		movt	r2, 16386
 1386 0768 5169     		ldr	r1, [r2, #20]
 1387 076a 7A68     		ldr	r2, [r7, #4]
 1388 076c 6FEA0202 		mvn	r2, r2
 1389 0770 0A40     		ands	r2, r2, r1
 1390 0772 5A61     		str	r2, [r3, #20]
 1391              	.L46:
1077:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1078:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1392              		.loc 1 1078 0
 1393 0774 07F10C07 		add	r7, r7, #12
 1394 0778 BD46     		mov	sp, r7
 1395 077a 80BC     		pop	{r7}
 1396 077c 7047     		bx	lr
 1397              		.cfi_endproc
 1398              	.LFE50:
 1400 077e 00BF     		.align	2
 1401              		.global	RCC_APB2PeriphClockCmd
 1402              		.thumb
 1403              		.thumb_func
 1405              	RCC_APB2PeriphClockCmd:
 1406              	.LFB51:
1079:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1080:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1081:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1082:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1083:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1084:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1085:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1086:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1087:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1088:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1089:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1090:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1091:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1092:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1093:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1094:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1095:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1096:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1407              		.loc 1 1096 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 8
 1410              		@ frame_needed = 1, uses_anonymous_args = 0
 1411              		@ link register save eliminated.
 1412 0780 80B4     		push	{r7}
 1413              	.LCFI64:
 1414              		.cfi_def_cfa_offset 4
 1415              		.cfi_offset 7, -4
 1416 0782 83B0     		sub	sp, sp, #12
 1417              	.LCFI65:
 1418              		.cfi_def_cfa_offset 16
 1419 0784 00AF     		add	r7, sp, #0
 1420              	.LCFI66:
 1421              		.cfi_def_cfa_register 7
 1422 0786 7860     		str	r0, [r7, #4]
 1423 0788 0B46     		mov	r3, r1
 1424 078a FB70     		strb	r3, [r7, #3]
1097:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1098:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1099:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1425              		.loc 1 1100 0
 1426 078c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1427 078e 002B     		cmp	r3, #0
 1428 0790 0CD0     		beq	.L50
1101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1429              		.loc 1 1102 0
 1430 0792 4FF48053 		mov	r3, #4096
 1431 0796 C4F20203 		movt	r3, 16386
 1432 079a 4FF48052 		mov	r2, #4096
 1433 079e C4F20202 		movt	r2, 16386
 1434 07a2 9169     		ldr	r1, [r2, #24]
 1435 07a4 7A68     		ldr	r2, [r7, #4]
 1436 07a6 0A43     		orrs	r2, r2, r1
 1437 07a8 9A61     		str	r2, [r3, #24]
 1438 07aa 0DE0     		b	.L49
 1439              	.L50:
1103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1440              		.loc 1 1106 0
 1441 07ac 4FF48053 		mov	r3, #4096
 1442 07b0 C4F20203 		movt	r3, 16386
 1443 07b4 4FF48052 		mov	r2, #4096
 1444 07b8 C4F20202 		movt	r2, 16386
 1445 07bc 9169     		ldr	r1, [r2, #24]
 1446 07be 7A68     		ldr	r2, [r7, #4]
 1447 07c0 6FEA0202 		mvn	r2, r2
 1448 07c4 0A40     		ands	r2, r2, r1
 1449 07c6 9A61     		str	r2, [r3, #24]
 1450              	.L49:
1107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1451              		.loc 1 1108 0
 1452 07c8 07F10C07 		add	r7, r7, #12
 1453 07cc BD46     		mov	sp, r7
 1454 07ce 80BC     		pop	{r7}
 1455 07d0 7047     		bx	lr
 1456              		.cfi_endproc
 1457              	.LFE51:
 1459 07d2 00BF     		.align	2
 1460              		.global	RCC_APB1PeriphClockCmd
 1461              		.thumb
 1462              		.thumb_func
 1464              	RCC_APB1PeriphClockCmd:
 1465              	.LFB52:
1109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1466              		.loc 1 1127 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 8
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471 07d4 80B4     		push	{r7}
 1472              	.LCFI67:
 1473              		.cfi_def_cfa_offset 4
 1474              		.cfi_offset 7, -4
 1475 07d6 83B0     		sub	sp, sp, #12
 1476              	.LCFI68:
 1477              		.cfi_def_cfa_offset 16
 1478 07d8 00AF     		add	r7, sp, #0
 1479              	.LCFI69:
 1480              		.cfi_def_cfa_register 7
 1481 07da 7860     		str	r0, [r7, #4]
 1482 07dc 0B46     		mov	r3, r1
 1483 07de FB70     		strb	r3, [r7, #3]
1128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1484              		.loc 1 1131 0
 1485 07e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1486 07e2 002B     		cmp	r3, #0
 1487 07e4 0CD0     		beq	.L53
1132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1488              		.loc 1 1133 0
 1489 07e6 4FF48053 		mov	r3, #4096
 1490 07ea C4F20203 		movt	r3, 16386
 1491 07ee 4FF48052 		mov	r2, #4096
 1492 07f2 C4F20202 		movt	r2, 16386
 1493 07f6 D169     		ldr	r1, [r2, #28]
 1494 07f8 7A68     		ldr	r2, [r7, #4]
 1495 07fa 0A43     		orrs	r2, r2, r1
 1496 07fc DA61     		str	r2, [r3, #28]
 1497 07fe 0DE0     		b	.L52
 1498              	.L53:
1134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1499              		.loc 1 1137 0
 1500 0800 4FF48053 		mov	r3, #4096
 1501 0804 C4F20203 		movt	r3, 16386
 1502 0808 4FF48052 		mov	r2, #4096
 1503 080c C4F20202 		movt	r2, 16386
 1504 0810 D169     		ldr	r1, [r2, #28]
 1505 0812 7A68     		ldr	r2, [r7, #4]
 1506 0814 6FEA0202 		mvn	r2, r2
 1507 0818 0A40     		ands	r2, r2, r1
 1508 081a DA61     		str	r2, [r3, #28]
 1509              	.L52:
1138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1510              		.loc 1 1139 0
 1511 081c 07F10C07 		add	r7, r7, #12
 1512 0820 BD46     		mov	sp, r7
 1513 0822 80BC     		pop	{r7}
 1514 0824 7047     		bx	lr
 1515              		.cfi_endproc
 1516              	.LFE52:
 1518 0826 00BF     		.align	2
 1519              		.global	RCC_APB2PeriphResetCmd
 1520              		.thumb
 1521              		.thumb_func
 1523              	RCC_APB2PeriphResetCmd:
 1524              	.LFB53:
1140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1525              		.loc 1 1186 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 8
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529              		@ link register save eliminated.
 1530 0828 80B4     		push	{r7}
 1531              	.LCFI70:
 1532              		.cfi_def_cfa_offset 4
 1533              		.cfi_offset 7, -4
 1534 082a 83B0     		sub	sp, sp, #12
 1535              	.LCFI71:
 1536              		.cfi_def_cfa_offset 16
 1537 082c 00AF     		add	r7, sp, #0
 1538              	.LCFI72:
 1539              		.cfi_def_cfa_register 7
 1540 082e 7860     		str	r0, [r7, #4]
 1541 0830 0B46     		mov	r3, r1
 1542 0832 FB70     		strb	r3, [r7, #3]
1187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1543              		.loc 1 1190 0
 1544 0834 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1545 0836 002B     		cmp	r3, #0
 1546 0838 0CD0     		beq	.L56
1191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1547              		.loc 1 1192 0
 1548 083a 4FF48053 		mov	r3, #4096
 1549 083e C4F20203 		movt	r3, 16386
 1550 0842 4FF48052 		mov	r2, #4096
 1551 0846 C4F20202 		movt	r2, 16386
 1552 084a D168     		ldr	r1, [r2, #12]
 1553 084c 7A68     		ldr	r2, [r7, #4]
 1554 084e 0A43     		orrs	r2, r2, r1
 1555 0850 DA60     		str	r2, [r3, #12]
 1556 0852 0DE0     		b	.L55
 1557              	.L56:
1193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1558              		.loc 1 1196 0
 1559 0854 4FF48053 		mov	r3, #4096
 1560 0858 C4F20203 		movt	r3, 16386
 1561 085c 4FF48052 		mov	r2, #4096
 1562 0860 C4F20202 		movt	r2, 16386
 1563 0864 D168     		ldr	r1, [r2, #12]
 1564 0866 7A68     		ldr	r2, [r7, #4]
 1565 0868 6FEA0202 		mvn	r2, r2
 1566 086c 0A40     		ands	r2, r2, r1
 1567 086e DA60     		str	r2, [r3, #12]
 1568              	.L55:
1197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1569              		.loc 1 1198 0
 1570 0870 07F10C07 		add	r7, r7, #12
 1571 0874 BD46     		mov	sp, r7
 1572 0876 80BC     		pop	{r7}
 1573 0878 7047     		bx	lr
 1574              		.cfi_endproc
 1575              	.LFE53:
 1577 087a 00BF     		.align	2
 1578              		.global	RCC_APB1PeriphResetCmd
 1579              		.thumb
 1580              		.thumb_func
 1582              	RCC_APB1PeriphResetCmd:
 1583              	.LFB54:
1199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1584              		.loc 1 1217 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 8
 1587              		@ frame_needed = 1, uses_anonymous_args = 0
 1588              		@ link register save eliminated.
 1589 087c 80B4     		push	{r7}
 1590              	.LCFI73:
 1591              		.cfi_def_cfa_offset 4
 1592              		.cfi_offset 7, -4
 1593 087e 83B0     		sub	sp, sp, #12
 1594              	.LCFI74:
 1595              		.cfi_def_cfa_offset 16
 1596 0880 00AF     		add	r7, sp, #0
 1597              	.LCFI75:
 1598              		.cfi_def_cfa_register 7
 1599 0882 7860     		str	r0, [r7, #4]
 1600 0884 0B46     		mov	r3, r1
 1601 0886 FB70     		strb	r3, [r7, #3]
1218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1602              		.loc 1 1221 0
 1603 0888 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1604 088a 002B     		cmp	r3, #0
 1605 088c 0CD0     		beq	.L59
1222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1606              		.loc 1 1223 0
 1607 088e 4FF48053 		mov	r3, #4096
 1608 0892 C4F20203 		movt	r3, 16386
 1609 0896 4FF48052 		mov	r2, #4096
 1610 089a C4F20202 		movt	r2, 16386
 1611 089e 1169     		ldr	r1, [r2, #16]
 1612 08a0 7A68     		ldr	r2, [r7, #4]
 1613 08a2 0A43     		orrs	r2, r2, r1
 1614 08a4 1A61     		str	r2, [r3, #16]
 1615 08a6 0DE0     		b	.L58
 1616              	.L59:
1224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1617              		.loc 1 1227 0
 1618 08a8 4FF48053 		mov	r3, #4096
 1619 08ac C4F20203 		movt	r3, 16386
 1620 08b0 4FF48052 		mov	r2, #4096
 1621 08b4 C4F20202 		movt	r2, 16386
 1622 08b8 1169     		ldr	r1, [r2, #16]
 1623 08ba 7A68     		ldr	r2, [r7, #4]
 1624 08bc 6FEA0202 		mvn	r2, r2
 1625 08c0 0A40     		ands	r2, r2, r1
 1626 08c2 1A61     		str	r2, [r3, #16]
 1627              	.L58:
1228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1628              		.loc 1 1229 0
 1629 08c4 07F10C07 		add	r7, r7, #12
 1630 08c8 BD46     		mov	sp, r7
 1631 08ca 80BC     		pop	{r7}
 1632 08cc 7047     		bx	lr
 1633              		.cfi_endproc
 1634              	.LFE54:
 1636 08ce 00BF     		.align	2
 1637              		.global	RCC_BackupResetCmd
 1638              		.thumb
 1639              		.thumb_func
 1641              	RCC_BackupResetCmd:
 1642              	.LFB55:
1230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1643              		.loc 1 1238 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 8
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648 08d0 80B4     		push	{r7}
 1649              	.LCFI76:
 1650              		.cfi_def_cfa_offset 4
 1651              		.cfi_offset 7, -4
 1652 08d2 83B0     		sub	sp, sp, #12
 1653              	.LCFI77:
 1654              		.cfi_def_cfa_offset 16
 1655 08d4 00AF     		add	r7, sp, #0
 1656              	.LCFI78:
 1657              		.cfi_def_cfa_register 7
 1658 08d6 0346     		mov	r3, r0
 1659 08d8 FB71     		strb	r3, [r7, #7]
1239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1660              		.loc 1 1241 0
 1661 08da 4FF48863 		mov	r3, #1088
 1662 08de C4F24223 		movt	r3, 16962
 1663 08e2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1664 08e4 1A60     		str	r2, [r3, #0]
1242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1665              		.loc 1 1242 0
 1666 08e6 07F10C07 		add	r7, r7, #12
 1667 08ea BD46     		mov	sp, r7
 1668 08ec 80BC     		pop	{r7}
 1669 08ee 7047     		bx	lr
 1670              		.cfi_endproc
 1671              	.LFE55:
 1673              		.align	2
 1674              		.global	RCC_ClockSecuritySystemCmd
 1675              		.thumb
 1676              		.thumb_func
 1678              	RCC_ClockSecuritySystemCmd:
 1679              	.LFB56:
1243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1680              		.loc 1 1251 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 8
 1683              		@ frame_needed = 1, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
 1685 08f0 80B4     		push	{r7}
 1686              	.LCFI79:
 1687              		.cfi_def_cfa_offset 4
 1688              		.cfi_offset 7, -4
 1689 08f2 83B0     		sub	sp, sp, #12
 1690              	.LCFI80:
 1691              		.cfi_def_cfa_offset 16
 1692 08f4 00AF     		add	r7, sp, #0
 1693              	.LCFI81:
 1694              		.cfi_def_cfa_register 7
 1695 08f6 0346     		mov	r3, r0
 1696 08f8 FB71     		strb	r3, [r7, #7]
1252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1697              		.loc 1 1254 0
 1698 08fa 4FF04C03 		mov	r3, #76
 1699 08fe C4F24223 		movt	r3, 16962
 1700 0902 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1701 0904 1A60     		str	r2, [r3, #0]
1255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1702              		.loc 1 1255 0
 1703 0906 07F10C07 		add	r7, r7, #12
 1704 090a BD46     		mov	sp, r7
 1705 090c 80BC     		pop	{r7}
 1706 090e 7047     		bx	lr
 1707              		.cfi_endproc
 1708              	.LFE56:
 1710              		.align	2
 1711              		.global	RCC_MCOConfig
 1712              		.thumb
 1713              		.thumb_func
 1715              	RCC_MCOConfig:
 1716              	.LFB57:
1256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1717              		.loc 1 1283 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 8
 1720              		@ frame_needed = 1, uses_anonymous_args = 0
 1721              		@ link register save eliminated.
 1722 0910 80B4     		push	{r7}
 1723              	.LCFI82:
 1724              		.cfi_def_cfa_offset 4
 1725              		.cfi_offset 7, -4
 1726 0912 83B0     		sub	sp, sp, #12
 1727              	.LCFI83:
 1728              		.cfi_def_cfa_offset 16
 1729 0914 00AF     		add	r7, sp, #0
 1730              	.LCFI84:
 1731              		.cfi_def_cfa_register 7
 1732 0916 0346     		mov	r3, r0
 1733 0918 FB71     		strb	r3, [r7, #7]
1284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1734              		.loc 1 1288 0
 1735 091a 41F20703 		movw	r3, #4103
 1736 091e C4F20203 		movt	r3, 16386
 1737 0922 FA79     		ldrb	r2, [r7, #7]
 1738 0924 1A70     		strb	r2, [r3, #0]
1289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1739              		.loc 1 1289 0
 1740 0926 07F10C07 		add	r7, r7, #12
 1741 092a BD46     		mov	sp, r7
 1742 092c 80BC     		pop	{r7}
 1743 092e 7047     		bx	lr
 1744              		.cfi_endproc
 1745              	.LFE57:
 1747              		.align	2
 1748              		.global	RCC_GetFlagStatus
 1749              		.thumb
 1750              		.thumb_func
 1752              	RCC_GetFlagStatus:
 1753              	.LFB58:
1290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1754              		.loc 1 1327 0
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 24
 1757              		@ frame_needed = 1, uses_anonymous_args = 0
 1758              		@ link register save eliminated.
 1759 0930 80B4     		push	{r7}
 1760              	.LCFI85:
 1761              		.cfi_def_cfa_offset 4
 1762              		.cfi_offset 7, -4
 1763 0932 87B0     		sub	sp, sp, #28
 1764              	.LCFI86:
 1765              		.cfi_def_cfa_offset 32
 1766 0934 00AF     		add	r7, sp, #0
 1767              	.LCFI87:
 1768              		.cfi_def_cfa_register 7
 1769 0936 0346     		mov	r3, r0
 1770 0938 FB71     		strb	r3, [r7, #7]
1328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
 1771              		.loc 1 1328 0
 1772 093a 4FF00003 		mov	r3, #0
 1773 093e FB60     		str	r3, [r7, #12]
1329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
 1774              		.loc 1 1329 0
 1775 0940 4FF00003 		mov	r3, #0
 1776 0944 7B61     		str	r3, [r7, #20]
1330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
 1777              		.loc 1 1330 0
 1778 0946 4FF00003 		mov	r3, #0
 1779 094a FB74     		strb	r3, [r7, #19]
1331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1780              		.loc 1 1335 0
 1781 094c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1782 094e 4FEA5313 		lsr	r3, r3, #5
 1783 0952 DBB2     		uxtb	r3, r3
 1784 0954 FB60     		str	r3, [r7, #12]
1336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1785              		.loc 1 1336 0
 1786 0956 FB68     		ldr	r3, [r7, #12]
 1787 0958 012B     		cmp	r3, #1
 1788 095a 06D1     		bne	.L65
1337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1789              		.loc 1 1338 0
 1790 095c 4FF48053 		mov	r3, #4096
 1791 0960 C4F20203 		movt	r3, 16386
 1792 0964 1B68     		ldr	r3, [r3, #0]
 1793 0966 7B61     		str	r3, [r7, #20]
 1794 0968 0FE0     		b	.L66
 1795              	.L65:
1339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1796              		.loc 1 1340 0
 1797 096a FB68     		ldr	r3, [r7, #12]
 1798 096c 022B     		cmp	r3, #2
 1799 096e 06D1     		bne	.L67
1341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1800              		.loc 1 1342 0
 1801 0970 4FF48053 		mov	r3, #4096
 1802 0974 C4F20203 		movt	r3, 16386
 1803 0978 1B6A     		ldr	r3, [r3, #32]
 1804 097a 7B61     		str	r3, [r7, #20]
 1805 097c 05E0     		b	.L66
 1806              	.L67:
1343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1807              		.loc 1 1346 0
 1808 097e 4FF48053 		mov	r3, #4096
 1809 0982 C4F20203 		movt	r3, 16386
 1810 0986 5B6A     		ldr	r3, [r3, #36]
 1811 0988 7B61     		str	r3, [r7, #20]
 1812              	.L66:
1347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1813              		.loc 1 1350 0
 1814 098a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1815 098c 03F01F03 		and	r3, r3, #31
 1816 0990 FB60     		str	r3, [r7, #12]
1351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1817              		.loc 1 1351 0
 1818 0992 FB68     		ldr	r3, [r7, #12]
 1819 0994 7A69     		ldr	r2, [r7, #20]
 1820 0996 22FA03F3 		lsr	r3, r2, r3
 1821 099a 03F00103 		and	r3, r3, #1
 1822 099e DBB2     		uxtb	r3, r3
 1823 09a0 002B     		cmp	r3, #0
 1824 09a2 03D0     		beq	.L68
1352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1825              		.loc 1 1353 0
 1826 09a4 4FF00103 		mov	r3, #1
 1827 09a8 FB74     		strb	r3, [r7, #19]
 1828 09aa 02E0     		b	.L69
 1829              	.L68:
1354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1830              		.loc 1 1357 0
 1831 09ac 4FF00003 		mov	r3, #0
 1832 09b0 FB74     		strb	r3, [r7, #19]
 1833              	.L69:
1358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
 1834              		.loc 1 1361 0
 1835 09b2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1836              		.loc 1 1362 0
 1837 09b4 1846     		mov	r0, r3
 1838 09b6 07F11C07 		add	r7, r7, #28
 1839 09ba BD46     		mov	sp, r7
 1840 09bc 80BC     		pop	{r7}
 1841 09be 7047     		bx	lr
 1842              		.cfi_endproc
 1843              	.LFE58:
 1845              		.align	2
 1846              		.global	RCC_ClearFlag
 1847              		.thumb
 1848              		.thumb_func
 1850              	RCC_ClearFlag:
 1851              	.LFB59:
1363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1852              		.loc 1 1372 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857 09c0 80B4     		push	{r7}
 1858              	.LCFI88:
 1859              		.cfi_def_cfa_offset 4
 1860              		.cfi_offset 7, -4
 1861 09c2 00AF     		add	r7, sp, #0
 1862              	.LCFI89:
 1863              		.cfi_def_cfa_register 7
1373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1864              		.loc 1 1374 0
 1865 09c4 4FF48053 		mov	r3, #4096
 1866 09c8 C4F20203 		movt	r3, 16386
 1867 09cc 4FF48052 		mov	r2, #4096
 1868 09d0 C4F20202 		movt	r2, 16386
 1869 09d4 526A     		ldr	r2, [r2, #36]
 1870 09d6 42F08072 		orr	r2, r2, #16777216
 1871 09da 5A62     		str	r2, [r3, #36]
1375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1872              		.loc 1 1375 0
 1873 09dc BD46     		mov	sp, r7
 1874 09de 80BC     		pop	{r7}
 1875 09e0 7047     		bx	lr
 1876              		.cfi_endproc
 1877              	.LFE59:
 1879 09e2 00BF     		.align	2
 1880              		.global	RCC_GetITStatus
 1881              		.thumb
 1882              		.thumb_func
 1884              	RCC_GetITStatus:
 1885              	.LFB60:
1376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1886              		.loc 1 1403 0
 1887              		.cfi_startproc
 1888              		@ args = 0, pretend = 0, frame = 16
 1889              		@ frame_needed = 1, uses_anonymous_args = 0
 1890              		@ link register save eliminated.
 1891 09e4 80B4     		push	{r7}
 1892              	.LCFI90:
 1893              		.cfi_def_cfa_offset 4
 1894              		.cfi_offset 7, -4
 1895 09e6 85B0     		sub	sp, sp, #20
 1896              	.LCFI91:
 1897              		.cfi_def_cfa_offset 24
 1898 09e8 00AF     		add	r7, sp, #0
 1899              	.LCFI92:
 1900              		.cfi_def_cfa_register 7
 1901 09ea 0346     		mov	r3, r0
 1902 09ec FB71     		strb	r3, [r7, #7]
1404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
 1903              		.loc 1 1404 0
 1904 09ee 4FF00003 		mov	r3, #0
 1905 09f2 FB73     		strb	r3, [r7, #15]
1405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1906              		.loc 1 1409 0
 1907 09f4 4FF48053 		mov	r3, #4096
 1908 09f8 C4F20203 		movt	r3, 16386
 1909 09fc 9A68     		ldr	r2, [r3, #8]
 1910 09fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1911 0a00 1340     		ands	r3, r3, r2
 1912 0a02 002B     		cmp	r3, #0
 1913 0a04 03D0     		beq	.L72
1410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1914              		.loc 1 1411 0
 1915 0a06 4FF00103 		mov	r3, #1
 1916 0a0a FB73     		strb	r3, [r7, #15]
 1917 0a0c 02E0     		b	.L73
 1918              	.L72:
1412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1919              		.loc 1 1415 0
 1920 0a0e 4FF00003 		mov	r3, #0
 1921 0a12 FB73     		strb	r3, [r7, #15]
 1922              	.L73:
1416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
 1923              		.loc 1 1419 0
 1924 0a14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1925              		.loc 1 1420 0
 1926 0a16 1846     		mov	r0, r3
 1927 0a18 07F11407 		add	r7, r7, #20
 1928 0a1c BD46     		mov	sp, r7
 1929 0a1e 80BC     		pop	{r7}
 1930 0a20 7047     		bx	lr
 1931              		.cfi_endproc
 1932              	.LFE60:
 1934 0a22 00BF     		.align	2
 1935              		.global	RCC_ClearITPendingBit
 1936              		.thumb
 1937              		.thumb_func
 1939              	RCC_ClearITPendingBit:
 1940              	.LFB61:
1421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1941              		.loc 1 1449 0
 1942              		.cfi_startproc
 1943              		@ args = 0, pretend = 0, frame = 8
 1944              		@ frame_needed = 1, uses_anonymous_args = 0
 1945              		@ link register save eliminated.
 1946 0a24 80B4     		push	{r7}
 1947              	.LCFI93:
 1948              		.cfi_def_cfa_offset 4
 1949              		.cfi_offset 7, -4
 1950 0a26 83B0     		sub	sp, sp, #12
 1951              	.LCFI94:
 1952              		.cfi_def_cfa_offset 16
 1953 0a28 00AF     		add	r7, sp, #0
 1954              	.LCFI95:
 1955              		.cfi_def_cfa_register 7
 1956 0a2a 0346     		mov	r3, r0
 1957 0a2c FB71     		strb	r3, [r7, #7]
1450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1958              		.loc 1 1455 0
 1959 0a2e 41F20A03 		movw	r3, #4106
 1960 0a32 C4F20203 		movt	r3, 16386
 1961 0a36 FA79     		ldrb	r2, [r7, #7]
 1962 0a38 1A70     		strb	r2, [r3, #0]
1456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1963              		.loc 1 1456 0
 1964 0a3a 07F10C07 		add	r7, r7, #12
 1965 0a3e BD46     		mov	sp, r7
 1966 0a40 80BC     		pop	{r7}
 1967 0a42 7047     		bx	lr
 1968              		.cfi_endproc
 1969              	.LFE61:
 1971              	.Letext0:
 1972              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 1973              		.file 3 "D:\\CORTEX\\F1_GlowingPainting\\Libraries\\CMSIS\\CM3\\DeviceSupport\\ST\\STM32F10x/stm32
 1974              		.file 4 "D:\\CORTEX\\F1_GlowingPainting\\Libraries\\STM32F10x_StdPeriph_Driver\\inc/stm32f10x_rcc.
 1975              		.file 5 "D:\\CORTEX\\F1_GlowingPainting\\Libraries\\CMSIS\\CM3\\CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rcc.c
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:19     .data.APBAHBPrescTable:00000000 $d
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:22     .data.APBAHBPrescTable:00000000 APBAHBPrescTable
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:40     .data.ADCPrescTable:00000000 $d
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:43     .data.ADCPrescTable:00000000 ADCPrescTable
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:49     .text:00000000 $t
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:54     .text:00000000 RCC_DeInit
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:134    .text:000000a8 RCC_HSEConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:214    .text:00000130 RCC_WaitForHSEStartUp
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1752   .text:00000930 RCC_GetFlagStatus
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:288    .text:00000194 RCC_AdjustHSICalibrationValue
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:343    .text:000001dc RCC_HSICmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:380    .text:000001fc RCC_PLLConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:436    .text:00000244 RCC_PLLCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:473    .text:00000264 RCC_PREDIV1Config
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:530    .text:000002b0 RCC_SYSCLKConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:583    .text:000002f0 RCC_GetSYSCLKSource
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:617    .text:00000310 RCC_HCLKConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:670    .text:00000350 RCC_PCLK1Config
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:723    .text:00000390 RCC_PCLK2Config
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:777    .text:000003d4 RCC_ITConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:842    .text:00000434 RCC_USBCLKConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:878    .text:00000454 RCC_ADCCLKConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:931    .text:00000494 RCC_LSEConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1000   .text:000004f4 RCC_LSICmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1037   .text:00000514 RCC_RTCCLKConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1077   .text:00000540 RCC_RTCCLKCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1114   .text:00000560 RCC_GetClocksFreq
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1346   .text:0000072c RCC_AHBPeriphClockCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1405   .text:00000780 RCC_APB2PeriphClockCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1464   .text:000007d4 RCC_APB1PeriphClockCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1523   .text:00000828 RCC_APB2PeriphResetCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1582   .text:0000087c RCC_APB1PeriphResetCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1641   .text:000008d0 RCC_BackupResetCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1678   .text:000008f0 RCC_ClockSecuritySystemCmd
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1715   .text:00000910 RCC_MCOConfig
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1850   .text:000009c0 RCC_ClearFlag
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1884   .text:000009e4 RCC_GetITStatus
C:\Users\Peter\AppData\Local\Temp\ccr6MEM6.s:1939   .text:00000a24 RCC_ClearITPendingBit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
